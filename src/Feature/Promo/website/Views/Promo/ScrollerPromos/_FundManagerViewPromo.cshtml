@using System.Collections.Specialized;
@using LionTrust.Foundation.SitecoreExtensions.Extensions;
@model LionTrust.Feature.Promo.Models.IArticlePromo
<div class="article-promo">
    <a href="#article promo" class="article-promo__front">
    </a>
    <a href="#" class="article-promo__body">
        <div class="article-promo__head">
            @if (Model.Author != null)
            {
                @Html.Glass().RenderImage(Model.Author, m => m.Image, new NameValueCollection { { "class", "article-promo__head-img" } }, isEditable: true)
                <span class="article-promo__head-title">@Html.Glass().Editable(Model.Author, m => m.Name)</span>
            }
            else if (Sitecore.Context.PageMode.IsExperienceEditor)
            {
                using (Html.Glass().BeginEditFrame(Model, "Select Article Author", x => x.Author))
                {
                    <span class="article-promo__head-title">Select author for article</span>
                }
            }
        </div>
        <span class="article-promo__title">
            @Html.Glass().Editable(Model, m => m.Title)
        </span>
        <span class="article-promo__desc">
            @Html.Glass().Editable(Model, m => m.Subitle)
        </span>
    </a>
    <div class="article-promo__footer">
        <div class="article-promo__footer-item">
            <img class="article-promo__clock" src="\images\components\svg-icons\clock.svg" alt="icon">
            <span class="article-promo__footer-text">
                @using (Html.Glass().BeginEditFrame(Model, "Edit Article Date", x => x.Date))
                {
                    if (Sitecore.Context.PageMode.IsExperienceEditor || Model.Date != DateTime.MinValue)
                    {
                        @Model.Date.ToDateString("d MMMM yyyy", "Today")
                    }
                    else
                    {
                        @Model.PublishedDate.ToDateString("d MMMM yyyy", "Today")
                    }
                }
            </span>
        </div>
    </div>

    @if ((Model.Image != null && !string.IsNullOrEmpty(Model.Image.Src)) || Sitecore.Context.PageMode.IsExperienceEditor)
    {
        @Html.Glass().RenderImage(Model, m => m.Image, new NameValueCollection { { "class", "article-promo__back" } }, isEditable: true)
    }
    else
    {
        @Html.Glass().RenderImage(Model, m => m.HeaderImage, new NameValueCollection { { "class", "article-promo__back" } }, isEditable: true)
    }
</div>