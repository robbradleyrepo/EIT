@using Glass.Mapper.Sc.Web.Mvc
@using LionTrust.Foundation.Analytics.Goals
@using System.Collections.Specialized;
@using LionTrust.Foundation.Analytics.Goals
@model LionTrust.Feature.Promo.Models.IImagePromo
@if (Model == null && !Sitecore.Context.PageMode.IsExperienceEditor)
{
    return;
}
 @{ 
     var titleColor = Model.TitleColor != null && !string.IsNullOrEmpty(Model.TitleColor.Value) ? Model.TitleColor.Value : "text-black";
 }
<div class="imagepromo whow-to">
    <div class="container">
        <div class="imagepromo__box">
            <div class="imagepromo__body">
                <div class="imagepromo__imagebox @(Model.TextAlignment != null && !string.IsNullOrEmpty(Model.TextAlignment.Value) && Model.TextAlignment.Value.Equals("left") ? "order-1" : string.Empty)">
                    <div class="row">
                        <div class="col-6">
                            <div class="imagepromo__imageboxchild">
                                @Html.Glass().RenderImage(Model, x => x.FirstImage, new NameValueCollection { { "class", "imagepromo__image-bg" } }, isEditable: true)
                                @Html.Glass().RenderImage(Model, x => x.SecondImage, new NameValueCollection { { "class", "imagepromo__image-sm" } }, isEditable: true)
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="imagepromo__imageboxchild">
                                @Html.Glass().RenderImage(Model, x => x.ThirdImage, new NameValueCollection { { "class", "imagepromo__image-sm" } }, isEditable: true)
                                @Html.Glass().RenderImage(Model, x => x.FourthImage, new NameValueCollection { { "class", "imagepromo__image-bg" } }, isEditable: true)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="imagepromo__content">
                    <div class="imagepromo__headbox text @titleColor">
                        <h2>@Html.Glass().Editable(Model, x => x.Heading)</h2>
                    </div>
                    <p class="imagepromo__contentbox @(Model.TextColour != null ? Model.TextColour.Value : "text-white")">
                        @Html.Glass().Editable(Model, x => x.Body)
                    </p>

                    <div class="imagepromo__btnbox">
                        @using (Html.Glass().AnalyticsGlass().BeginRenderLinkWithGoal(Model, m => m.PrimaryCTALink, Model.PrimaryCTAGoal, new NameValueCollection { { "class", "btn btn-primary imagepromo__btn" } }, isEditable: true))
                        {
                            if (Model.PrimaryCTALink != null)
                            {
                                if (!string.IsNullOrEmpty(Model.PrimaryCTALink.Text))
                                {
                                    @Model.PrimaryCTALink.Text
                                }

                                <i class="icon-arrow-right imagepromo__arrow animate-arrow"></i>
                            }
                        }
                        @using (Html.Glass().AnalyticsGlass().BeginRenderLinkWithGoal(Model, m => m.SecondaryCTALink, Model.SecondaryCTAGoal, new NameValueCollection { { "class", "btn btn-primary-forward imagepromo__btn" } }, isEditable: true))
                        {
                            if (Model.SecondaryCTALink != null)
                            {
                                if (!string.IsNullOrEmpty(Model.SecondaryCTALink.Text))
                                {
                                    @Model.SecondaryCTALink.Text
                                }
                                <i class="icon-arrow-right imagepromo__arrow animate-arrow"></i>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <img src="/dist/images/components/banners/brand-element-chevron.svg" class="shevron-bg" />
</div>
