@using Glass.Mapper.Sc.Web.Mvc
@using Sitecore.Mvc
@using System.Linq
@model LionTrust.Feature.Article.Models.ArticleViewModel

<header class="header header-hero d-flex flex-column justify-content-between" style="@Model.BackgroundImageStyle"
        data-percentage-scroll="@Model.ArticleData.PercentageScroll" data-percentage-goal="@Model.ArticleData.PercentageGoal">
    @Html.Sitecore().Placeholder("header-login")
    <section class="container">
        @Html.Sitecore().Placeholder("navigation")
        <div class="container text-center mt-5">

            @if (Model.ShowAuthors)
            {
                <div class="row">
                    <div class="hero-manager-link small">
                        @foreach (var author in Model.ArticleData.Authors)
                        {
                            using (Html.Glass().BeginEditFrame(author, "Edit author", m => m))
                            {
                                if (author.Image != null && !string.IsNullOrEmpty(author.Image.Src) && !Model.IsFundUpdate)
                                {
                                    <div>
                                        <a href="@(author.Page != null ? author.Page.Url : "#")" title="@author.FullName" target="@(author.Page != null ? author.Page.Target : "")">
                                            <img src="@author.Image.Src" alt="@author.FullName">
                                            <span>
                                                @author.FullName
                                            </span>
                                        </a>
                                    </div>
                                }
                            }
                        }
                    </div>
                </div>
            }

            <div class="row">
                <div class="col-xl-6 offset-xl-3 mt-3">
                    <div class="article-hero">
                        <div class="article-hero__content text-center">
                            <time itemprop="datePublished">
                                @if (!Sitecore.Context.PageMode.IsExperienceEditor)
                                {
                                    if (Model.ArticleData.Date.Equals(DateTime.MinValue))
                                    {
                                        @Model.ArticleData.CreatedDate.ToString("dd-MM-yyyy")
                                    }
                                    else
                                    {
                                        @Model.ArticleDate.Date.ToString("dd-MM-yyyy")
                                    }
                                }
                                else
                                {
                                    @Html.Glass().Editable(m => m.ArticleData.Date, d => d.ArticleData.Date.ToString("dd-MM-yyyy"))
                                }
                            </time>
                            <h1 class="article-hero__title">
                                @Html.Glass().Editable(m => m.ArticleData.Title)
                            </h1>
                            @if (Model.IsFundUpdate)
                            {
                                <h4 class="article-hero__subtitle">
                                    @Html.Glass().Editable(m => m.ArticleData.Subtitle)
                                </h4>
                            }
                            @using (Html.Glass().BeginEditFrame(Model.ArticleData, "Edit topics", m => m.Topics))
                            {
                                <div class="topic-follow d-none d-lg-flex">
                                    @foreach (var item in Model.ArticleData.Topics)
                                    {
                                        <a href="@item.Url" class="follow-btn"><i class="icon-follow"></i><span>@item.Title</span></a>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <div class="section">
        @Html.Sitecore().Placeholder("article-header")
    </div>

    @if (!Sitecore.Context.PageMode.IsExperienceEditor && !Sitecore.Context.PageMode.IsPreview && Model.ArticleSchema != null)
    {
        Html.RenderAction("ArticleSchema", "Schema", new { ArticleSchema = Model.ArticleSchema });
    }
</header>