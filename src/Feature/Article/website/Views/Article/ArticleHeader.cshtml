@using Glass.Mapper.Sc.Web.Mvc
@using Sitecore.Mvc
@using ArticleConstants = LionTrust.Foundation.Legacy.Constants
@model LionTrust.Feature.Article.Models.ArticleViewModel

@{ 
    var isFundUpdate = Model.ArticleData.PromoType != null && Model.ArticleData.PromoType.Id.ToString("D").ToUpper().Equals(ArticleConstants.Article.FundUpdateContentTypeId);
}

<header class="header header-hero d-flex flex-column justify-content-between" style="@Model.BackgroundImageStyle">
    <section class="container">
        @Html.Sitecore().Placeholder("navigation")
        <div class="d-flex flex-column">
            <div class="row">
                <div class="col-xl-6 offset-xl-3">
                    <div class="article-hero">
                        <div class="hero-author hero-author_big">
                            @using (Html.Glass().BeginEditFrame(Model.ArticleData, "Edit author", m => m.Author))
                            {
                                if (!string.IsNullOrEmpty(Model.AuthorImageUrl) && !isFundUpdate)
                                {
                                    <img src="@Model.AuthorImageUrl"
                                         alt="@Model.AuthorName" class="hero-author__img">
                                }
                            }
                        <div class="hero-author__content">
                            @if (!isFundUpdate)
                            {
                                <span class="hero-author__name">
                                    @Model.AuthorName <i class="icon-follow"></i>
                                </span>
                            }
                            <span class="hero-author__date">
                                @if (!Sitecore.Context.PageMode.IsExperienceEditor)
                                {
                                    if (Model.ArticleData.Date.Equals(DateTime.MinValue))
                                    {
                                        @Model.ArticleData.CreatedDate.ToString("dd-MM-yy")
                                    }
                                    else
                                    {
                                        @Model.ArticleDate.Date.ToString("dd-MM-yy")
                                    }
                                }
                                else
                                {
                                    @Html.Glass().Editable(m => m.ArticleData.Date, d => d.ArticleData.Date.ToString("dd-MM-yy"))
                                }
                            </span>
                        </div>
                        </div>
                        <div class="article-hero__content text-center">
                            <h1 class="article-hero__title">
                                @Html.Glass().Editable(m => m.ArticleData.Title)
                            </h1>
                            @if (isFundUpdate)
                            {
                                <h4 class="article-hero__subtitle">
                                    @Html.Glass().Editable(m => m.ArticleData.Subtitle)
                                </h4>
                            }
                            @using (Html.Glass().BeginEditFrame(Model.ArticleData, "Edit topics", m => m.Topics))
                            {
                                <div class="topic-follow d-none d-lg-flex">
                                    @foreach (var item in Model.ArticleData.Topics)
                                    {
                                        <a href="@item.Url" class="follow-btn"><i class="icon-follow"></i><span>@item.Title</span></a>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <div class="section">
        @Html.Sitecore().Placeholder("article-header")
    </div>
</header>