@using Glass.Mapper.Sc.Web.Mvc
@using System.Collections.Specialized;
@using LionTrust.Foundation.ORM.Extensions;
@using LionTrust.Foundation.Navigation;

@model LionTrust.Feature.Navigation.Models.NavigationViewModel
@if (Model != null && Model.HomeItem != null)
{
    <div class="sidebar sidebar_border">
        <div class="sidebar__top">
            <div class="sidebar__header">
                <button class="sidebar__close-btn"></button>
                <div class="sidebar__logo">
                    <a href="@Model.HomeItem.Url" class="sidebar__logo-link">
                        @if (Model.HomeItem.Logo != null)
                        {
                            @Html.Glass().RenderImage(Model.HomeItem, x => x.Logo, new { alt = Model.HomeItem.Logo != null ? Model.HomeItem.Logo.Alt : string.Empty, @class = "sidebar__logo-img" }, isEditable: true)
                        }
                    </a>
                </div>
            </div>
            <nav class="navigation">
                @if (Model.MenuItems != null && Model.MenuItems.Any())
                {
                    <ul class="navigation__list">
                        @foreach (var menuItem in Model.MenuItems.WithAccessTo())
                        {
                            var filteredChildrens = menuItem.Children.Where(m => !m.ExcludeInSearchResults);

                            if (filteredChildrens != null && filteredChildrens.Any())
                            {
                                <li class="navigation__item">
                                    <label class="navigation__link" for="@menuItem.Name">
                                        @Html.Glass().Editable(menuItem, z => z.PageTitle)
                                    </label>
                                </li>
                            }
                            else
                            {
                                <li class="navigation__item">
                                    <a href="@menuItem.Url" class="navigation__link">
                                        @Html.Glass().Editable(menuItem, z => z.PageTitle)
                                    </a>
                                </li>
                            }
                        }
                    </ul>
                }
            </nav>

            @if (Model.HomeItem.MyLionTrust != null)
            {
                <div class="sidebar__profile-btn">
                    @using (Html.Glass().BeginRenderLink(Model.HomeItem, p => p.MyLionTrust, new { @class = "btn btn-primary btn-block" }, isEditable: true))
                    {
                        <i class="icon-user"></i>
                        if (!string.IsNullOrWhiteSpace(Model.HomeItem.MyLionTrust.Text))
                        {
                            @Model.HomeItem.MyLionTrust.Text
                        }
                    }
                </div>
            }

            <div class="sidebar__setting">
                <ul class="sidebar-actions">
                    @if (Model.HomeItem.MyPreferences != null)
                    {
                        <li class="sidebar-actions__item">
                            <a href="@Model.HomeItem.MyPreferences.Url" class="sidebar-actions__link">
                                <i class="icon-settings"></i>
                                @Html.Glass().Editable(Model.HomeItem.MyPreferences, z => z.PageTitle)
                            </a>
                        </li>
                    }
                    @if (Model.HomeItem.SignupNewsLetter != null)
                    {
                        <li class="sidebar-actions__item">
                            <a href="@Model.HomeItem.SignupNewsLetter.Url" class="sidebar-actions__link">
                                <i class="icon-email"></i>
                                @Html.Glass().Editable(Model.HomeItem.SignupNewsLetter, z => z.PageTitle)
                            </a>
                        </li>
                    }
                    @if (Model.HomeItem.ContactUsPage != null)
                    {
                        <li class="sidebar-actions__item">
                            <a href="@Model.HomeItem.ContactUsPage.Url" class="sidebar-actions__link">
                                <i class="icon-chat"></i>
                                @Html.Glass().Editable(Model.HomeItem.ContactUsPage, z => z.PageTitle)
                            </a>
                        </li>
                    }
                </ul>
            </div>
            <div class="user-status">
                <div class="user-status_hr"></div>
                <span class="user-status__text">
                    @Html.Glass().Editable(Model.HomeItem, z => z.YouAreViewingLabelWithArticle) <span class="user-status__name">@Model.HomeItem.OnboardingRoleName</span>
                    | <a href="@Model.HomeItem.ChangeInvestorUrl" class="user-status__change-type">@Html.Glass().Editable(Model.HomeItem, m => m.ChangeLabel)</a>
                </span>
            </div>
        </div>
        <div class="sidebar__bottom">
            @if (Model.MenuItems != null && Model.MenuItems.Any())
            {
                <nav class="navigation navigation_desktop">
                    <ul class="navigation__list">
                        @foreach (var menuItem in Model.MenuItems.WithAccessTo())
                        {
                            var filteredChildrens = menuItem.Children.Where(m => !m.ExcludeInSearchResults);
                            if (filteredChildrens != null && filteredChildrens.Any())
                            {
                                <li class="navigation__item">
                                    <label class="navigation__link" for="@menuItem.Name">
                                        @Html.Glass().Editable(menuItem, z => z.PageTitle)
                                    </label>
                                </li>
                            }
                            else
                            {
                                <li class="navigation__item">
                                    <a href="@menuItem.Url" class="navigation__link">
                                        @Html.Glass().Editable(menuItem, z => z.PageTitle)
                                    </a>
                                </li>
                            }
                        }

                    </ul>
                </nav>
            }
        </div>

        @if (Model.HomeItem.HeaderConfiguration != null
            && Model.HomeItem.HeaderConfiguration.HeaderDropDowns != null
            && Model.HomeItem.HeaderConfiguration.HeaderDropDowns.Any())
        {
            <div class="navigation__sublinks-items">
                @foreach (var dropDown in Model.HomeItem.HeaderConfiguration.HeaderDropDowns)
                {
                    if (dropDown.PageItem != null)
                    {
                        var navigationColumnCount = 0;
                        <div class="navigation__item">
                            <input type="checkbox" id="@dropDown.Name" class="navigation__checkbox">
                            <div class="navigation__submenu">
                                <label class="navigation__close-submenu" for="@dropDown.Name">
                                    <i class="icon-chevron-left"></i>
                                    back
                                </label>
                                <ul class="navigation__sub-list">
                                    <li class="navigation__sub-item">
                                        <a class="mb-3 navigation__sub-link navigation__sub-link_heading" href="@dropDown.PageItem.Url">
                                            @Html.Glass().Editable(dropDown.PageItem, z => z.PageTitle)
                                        </a>
                                        @if (dropDown.ShowCTA)
                                        {
                                            using (Html.Glass().BeginRenderLink(dropDown, x => x.CTALink, new NameValueCollection { { "class", "btn btn-primary btn-block mb-4" } }, isEditable: true))
                                            {
                                                if (dropDown.CTALink != null && !string.IsNullOrEmpty(dropDown.CTALink.Text))
                                                {
                                                    @dropDown.CTALink.Text
                                                }
                                            }
                                        }
                                    </li>
                                </ul>
                                @if (dropDown.NavigationColumns != null && dropDown.NavigationColumns.Any())
                                {
                                    foreach (var navigationColumn in dropDown.NavigationColumns)
                                    {
                                        switch (navigationColumnCount)
                                        {
                                            case 0:
                                                {
                                                    @:<div>
                                                        break;
                                                    }
                                                case 1:
                                                    {
                                                        @:<div class="mt-3">
                                                            break;
                                                        }
                                                    case 2:
                                                        {
                                                            @:<div class="mt-4">
                                                                break;
                                                            }
                                                        default:
                                                            @:<div>
                                                                break;
                                                        }
                                                        navigationColumnCount++;

                                                        <h4 class="dropdown-nav__title">@Html.Glass().Editable(navigationColumn, z => z.ColumnTitle)</h4>
                                                        if (navigationColumn.ShowColumnLink)
                                                        {
                                                            using (Html.Glass().BeginRenderLink(navigationColumn, z => z.ColumnLink, new NameValueCollection { { "class", "link-styles d-block mb-4" } }, isEditable: true))
                                                            {
                                                                if (navigationColumn.ColumnLink != null
                                                                    && !string.IsNullOrEmpty(navigationColumn.ColumnLink.Text))
                                                                {
                                                                    @navigationColumn.ColumnLink.Text
                                                                }
                                                                <i class="icon-arrow-right"></i>
                                                            }

                                                            if (navigationColumn.PageLinks != null && navigationColumn.PageLinks.Any())
                                                            {
                                                                <ul class="dropdown-nav__list">
                                                                    @foreach (var pageLink in navigationColumn.PageLinks)
                                                                    {
                                                                        <li class="dropdown-nav__item">
                                                                            <a href="@pageLink.Url" class="dropdown-nav__link">@Html.Glass().Editable(pageLink, z => z.PageTitle)</a>
                                                                        </li>
                                                                    }
                                                                </ul>
                                                            }
                                                        }

                                                        if (navigationColumnCount > 0)
                                                        {
                                                        @:</div>
                                                        if (navigationColumnCount >= 2)
                                                        {
                                                            break;
                                                        }
                                                    }
                                                }
                                            }
                                @if (navigationColumnCount < 3 && dropDown.Images != null && dropDown.Images.Any())
                                {
                                    if (navigationColumnCount < 2)
                                    {
                                        var imagesCount = dropDown.Images.Count();
                                        if (imagesCount == 1)
                                        {
                                            var image = dropDown.Images.FirstOrDefault();
                                            if (image != null)
                                            {
                                                <div class="col-xl-4 col-lg-5 offset-lg-4 offset-xl-5">
                                                    @if (image.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                    {
                                                        using (Html.Glass().BeginRenderLink(image, z => z.Link, new NameValueCollection { { "class", "quick-link-chart" }, { "style", image.Image != null ? image.Image.GetSafeBackgroundImageStyle() : string.Empty } }, isEditable: true))
                                                        {
                                                            <span class="quick-link-chart__title">@Html.Glass().Editable(image, z => z.Title)</span>
                                                            <span class="quick-link-chart__text">@Html.Glass().Editable(image, z => z.Description)</span>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <a href="#" class="quick-link-chart" style="@(image.Image !=null ? image.Image.GetSafeBackgroundImageStyle() : string.Empty)">
                                                            <span class="quick-link-chart__title">@Html.Glass().Editable(image, z => z.Title)</span>
                                                            <span class="quick-link-chart__text">@Html.Glass().Editable(image, z => z.Description)</span>
                                                        </a>
                                                    }
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            var imageCollecion = dropDown.Images;
                                            <div class="col-xl-7 col-lg-9 offset-xl-2">
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        @if (imagesCount == 2)
                                                        {
                                                            var firstImage = dropDown.Images.FirstOrDefault();
                                                            if (firstImage != null)
                                                            {
                                                                if (firstImage.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                                {
                                                                    using (Html.Glass().BeginRenderLink(firstImage, z => z.Link, new NameValueCollection { { "class", "quick-link-chart" }, { "style", firstImage.Image != null ? firstImage.Image.GetSafeBackgroundImageStyle() : string.Empty } }, isEditable: true))
                                                                    {
                                                                        <span class="quick-link-chart__title">@Html.Glass().Editable(firstImage, z => z.Title)</span>
                                                                        <span class="quick-link-chart__text">@Html.Glass().Editable(firstImage, z => z.Description)</span>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <a href="#" class="quick-link-chart" style="@(firstImage.Image !=null ? firstImage.Image.GetSafeBackgroundImageStyle() : string.Empty)">
                                                                        <span class="quick-link-chart__title">@Html.Glass().Editable(firstImage, z => z.Title)</span>
                                                                        <span class="quick-link-chart__text">@Html.Glass().Editable(firstImage, z => z.Description)</span>
                                                                    </a>
                                                                }
                                                            }
                                                            imageCollecion = imageCollecion.Skip(1);
                                                        }
                                                        else
                                                        {
                                                            var firstImage = dropDown.Images.FirstOrDefault();
                                                            if (firstImage != null)
                                                            {
                                                                if (firstImage.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                                {
                                                                    using (Html.Glass().BeginRenderLink(firstImage, z => z.Link, new NameValueCollection { { "class", "quick-link-chart quick-link-chart__small" }, { "style", firstImage.Image != null ? firstImage.Image.GetSafeBackgroundImageStyle() : string.Empty } }, isEditable: true))
                                                                    {
                                                                        <span class="quick-link-chart__title">@Html.Glass().Editable(firstImage, z => z.Title)</span>
                                                                        <span class="quick-link-chart__text">@Html.Glass().Editable(firstImage, z => z.Description)</span>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <a href="#" class="quick-link-chart quick-link-chart__small" style="@(firstImage.Image !=null ? firstImage.Image.GetSafeBackgroundImageStyle() : string.Empty)')">
                                                                        <span class="quick-link-chart__title">@Html.Glass().Editable(firstImage, z => z.Title)</span>
                                                                        <span class="quick-link-chart__text">@Html.Glass().Editable(firstImage, z => z.Description)</span>
                                                                    </a>
                                                                }
                                                            }
                                                            var secondImage = dropDown.Images.Skip(1).FirstOrDefault();
                                                            if (secondImage != null)
                                                            {
                                                                if (secondImage.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                                {
                                                                    using (Html.Glass().BeginRenderLink(secondImage, z => z.Link, new NameValueCollection { { "class", "quick-link-chart quick-link-chart__small" }, { "style", secondImage.Image != null ? secondImage.Image.Src : string.Empty } }, isEditable: true))
                                                                    {
                                                                        <span class="quick-link-chart__title">@Html.Glass().Editable(secondImage, z => z.Title)</span>
                                                                        <span class="quick-link-chart__text">@Html.Glass().Editable(secondImage, z => z.Description)</span>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <a href="#" class="quick-link-chart quick-link-chart__small" style="@(secondImage.Image !=null ? secondImage.Image.GetSafeBackgroundImageStyle() : string.Empty)">
                                                                        <span class="quick-link-chart__title">@Html.Glass().Editable(secondImage, z => z.Title)</span>
                                                                        <span class="quick-link-chart__text">@Html.Glass().Editable(secondImage, z => z.Description)</span>
                                                                    </a>
                                                                }
                                                            }
                                                            imageCollecion = imageCollecion.Skip(2);
                                                        }
                                                    </div>
                                                    <div class="col-md-6">
                                                        @if (imagesCount < 4)
                                                        {
                                                            var secondColumnImage = dropDown.Images.FirstOrDefault();
                                                            if (secondColumnImage != null)
                                                            {
                                                                if (secondColumnImage != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                                {
                                                                    using (Html.Glass().BeginRenderLink(secondColumnImage, z => z.Link, new NameValueCollection { { "class", "quick-link-chart" }, { "style", secondColumnImage.Image != null ? secondColumnImage.Image.GetSafeBackgroundImageStyle() : string.Empty } }, isEditable: true))
                                                                    {
                                                                        <span class="quick-link-chart__title">@Html.Glass().Editable(secondColumnImage, z => z.Title)</span>
                                                                        <span class="quick-link-chart__text">@Html.Glass().Editable(secondColumnImage, z => z.Description)</span>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <a href="#" class="quick-link-chart" style="@(secondColumnImage.Image !=null ? secondColumnImage.Image.GetSafeBackgroundImageStyle() : string.Empty)">
                                                                        <span class="quick-link-chart__title">@Html.Glass().Editable(secondColumnImage, z => z.Title)</span>
                                                                        <span class="quick-link-chart__text">@Html.Glass().Editable(secondColumnImage, z => z.Description)</span>
                                                                    </a>
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            var secondColumnFirstImage = dropDown.Images.FirstOrDefault();
                                                            if (secondColumnFirstImage != null)
                                                            {
                                                                if (secondColumnFirstImage.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                                {
                                                                    using (Html.Glass().BeginRenderLink(secondColumnFirstImage, z => z.Link, new NameValueCollection { { "class", "quick-link-chart quick-link-chart__small" }, { "style", secondColumnFirstImage.Image != null ? secondColumnFirstImage.Image.GetSafeBackgroundImageStyle() : string.Empty } }, isEditable: true))
                                                                    {
                                                                        <span class="quick-link-chart__title">@Html.Glass().Editable(secondColumnFirstImage, z => z.Title)</span>
                                                                        <span class="quick-link-chart__text">@Html.Glass().Editable(secondColumnFirstImage, z => z.Description)</span>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <a href="#" class="quick-link-chart quick-link-chart__small" style="@(secondColumnFirstImage.Image !=null ? secondColumnFirstImage.Image.GetSafeBackgroundImageStyle() : string.Empty)">
                                                                        <span class="quick-link-chart__title">@Html.Glass().Editable(secondColumnFirstImage, z => z.Title)</span>
                                                                        <span class="quick-link-chart__text">@Html.Glass().Editable(secondColumnFirstImage, z => z.Description)</span>
                                                                    </a>
                                                                }
                                                            }
                                                            var secondColumnSecondImage = dropDown.Images.Skip(1).FirstOrDefault();
                                                            if (secondColumnSecondImage != null)
                                                            {
                                                                if (secondColumnSecondImage.Link != null)
                                                                {
                                                                    using (Html.Glass().BeginRenderLink(secondColumnSecondImage, z => z.Link, new NameValueCollection { { "class", "quick-link-chart quick-link-chart__small" }, { "style", secondColumnSecondImage.Image != null ? secondColumnSecondImage.Image.GetSafeBackgroundImageStyle() : string.Empty } }, isEditable: true))
                                                                    {
                                                                        <span class="quick-link-chart__title">@Html.Glass().Editable(secondColumnSecondImage, z => z.Title)</span>
                                                                        <span class="quick-link-chart__text">@Html.Glass().Editable(secondColumnSecondImage, z => z.Description)</span>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <a href="#" class="quick-link-chart quick-link-chart__small" style="@(secondColumnSecondImage.Image !=null ? secondColumnSecondImage.Image.GetSafeBackgroundImageStyle() : string.Empty)">
                                                                        <span class="quick-link-chart__title">@Html.Glass().Editable(secondColumnSecondImage, z => z.Title)</span>
                                                                        <span class="quick-link-chart__text">@Html.Glass().Editable(secondColumnSecondImage, z => z.Description)</span>
                                                                    </a>
                                                                }
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        if (dropDown.Images.Count() == 1)
                                        {
                                            var image = dropDown.Images.FirstOrDefault();
                                            if (image != null)
                                            {
                                                <div class="col-xl-4 col-lg-5 offset-lg-4 offset-xl-5">
                                                    @if (image.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                    {
                                                        using (Html.Glass().BeginRenderLink(image, z => z.Link, new NameValueCollection { { "class", "quick-link-chart" }, { "style", image.Image != null ? image.Image.GetSafeBackgroundImageStyle() : string.Empty } }, isEditable: true))
                                                        {
                                                            <span class="quick-link-chart__title">@Html.Glass().Editable(image, z => z.Title)</span>
                                                            <span class="quick-link-chart__text">@Html.Glass().Editable(image, z => z.Description)</span>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <a href="#" class="quick-link-chart" style="@(image.Image !=null ? image.Image.GetSafeBackgroundImageStyle() : string.Empty)">
                                                            <span class="quick-link-chart__title">@Html.Glass().Editable(image, z => z.Title)</span>
                                                            <span class="quick-link-chart__text">@Html.Glass().Editable(image, z => z.Description)</span>
                                                        </a>
                                                    }
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            var firstImage = dropDown.Images.FirstOrDefault();
                                            if (firstImage != null)
                                            {
                                                <div class="col-xl-4 col-lg-5 offset-lg-4 offset-xl-5">
                                                    @if (firstImage.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                    {
                                                        using (Html.Glass().BeginRenderLink(firstImage, z => z.Link, new NameValueCollection { { "class", "quick-link-chart quick-link-chart__small" }, { "style", firstImage.Image != null ? firstImage.Image.GetSafeBackgroundImageStyle() : string.Empty } }, isEditable: true))
                                                        {
                                                            <span class="quick-link-chart__title">@Html.Glass().Editable(firstImage, z => z.Title)</span>
                                                            <span class="quick-link-chart__text">@Html.Glass().Editable(firstImage, z => z.Description)</span>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <a href="#" class="quick-link-chart quick-link-chart__small" style="@(firstImage.Image !=null ? firstImage.Image.GetSafeBackgroundImageStyle() : string.Empty)">
                                                            <span class="quick-link-chart__title">@Html.Glass().Editable(firstImage, z => z.Title)</span>
                                                            <span class="quick-link-chart__text">@Html.Glass().Editable(firstImage, z => z.Description)</span>
                                                        </a>
                                                    }
                                                </div>
                                            }
                                            var secondImage = dropDown.Images.Skip(1).FirstOrDefault();
                                            if (secondImage != null)
                                            {
                                                <div class="col-xl-4 col-lg-5 offset-lg-4 offset-xl-5">
                                                    @if (secondImage.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                    {
                                                        using (Html.Glass().BeginRenderLink(secondImage, z => z.Link, new NameValueCollection { { "class", "quick-link-chart quick-link-chart__small" }, { "style", secondImage.Image != null ? secondImage.Image.GetSafeBackgroundImageStyle() : string.Empty } }, isEditable: true))
                                                        {
                                                            <span class="quick-link-chart__title">@Html.Glass().Editable(secondImage, z => z.Title)</span>
                                                            <span class="quick-link-chart__text">@Html.Glass().Editable(secondImage, z => z.Description)</span>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <a href="#" class="quick-link-chart quick-link-chart__small" style="@(secondImage.Image !=null ? secondImage.Image.GetSafeBackgroundImageStyle() : string.Empty)">
                                                            <span class="quick-link-chart__title">@Html.Glass().Editable(secondImage, z => z.Title)</span>
                                                            <span class="quick-link-chart__text">@Html.Glass().Editable(secondImage, z => z.Description)</span>
                                                        </a>
                                                    }
                                                </div>
                                            }
                                        }
                                    }
                                }
                            </div>
                        </div>
                    }
                }
            </div>
        }
    </div>
    <!-- For desktop sidebar links items -->
    if (Model.MenuItems != null && Model.MenuItems.Any())
    {
        <div class="navigation__sublinks-items">
            @foreach (var menuItem in Model.MenuItems.WithAccessTo())
            {
                var filteredChildrens = menuItem.Children.Where(m => !m.ExcludeInSearchResults);
                <div class="navigation__item">
                    <input type="checkbox" id="@menuItem.Name" class="navigation__checkbox">
                    <div class="navigation__submenu">
                        <label class="navigation__close-submenu" for="@menuItem.Name">
                            <i class="icon-chevron-left"></i>
                            back
                        </label>
                        <ul class="navigation__sub-list">
                            <li class="navigation__sub-item">
                                <a class="navigation__sub-link navigation__sub-link_heading" href="@menuItem.Url">
                                    @Html.Glass().Editable(menuItem, z => z.PageTitle)
                                    <i class="icon-chevron-right"></i>
                                </a>
                            </li>
                            @if (filteredChildrens != null && filteredChildrens.Any())
                            {
                                foreach (var child in filteredChildrens)
                                {
                                    <li class="navigation__sub-item">
                                        <a class="navigation__sub-link" href="@child.Url">@Html.Glass().Editable(child, z => z.PageTitle)</a>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            }
        </div>
    }
    <div class="sidebar-overlay"></div>

}
else if (Sitecore.Context.PageMode.IsExperienceEditor)
{
    @:Issue with navigation: Root/Home item isn't correct
}
