@using System.Collections.Specialized;
@using Glass.Mapper.Sc.Web.Mvc;
@using LionTrust.Feature.Navigation.Models;
@model LionTrust.Feature.Navigation.Models.NavigationViewModel
@if (Model != null && Model.HomeItem != null && Model.RootItem != null)
{
    <header class="header">
        <section class="container">
            <div class="header-navbar">
                @using (Html.Glass().BeginEditFrame(Model.HomeItem, "Edit Menu Links", x => x.MenuItems))
                {
                    <button class="header-navbar__btn-open"></button>
                }

                <a href="@Model.HomeItem.Url" class="header-navbar__logo">
                    @Html.Glass().RenderImage(Model.RootItem, x => x.Logo, new { alt = Model.RootItem.Logo != null ? Model.RootItem.Logo.Alt : string.Empty, @class = "header-navbar__logo-img" }, isEditable: true)
                </a>

                @if (Model.HomeItem.HeaderConfiguration != null && Model.HomeItem.HeaderConfiguration.HeaderDropDowns != null && Model.HomeItem.HeaderConfiguration.HeaderDropDowns.Any())
                {
                    <nav class="nav-desktop">
                        <ul class="nav-desktop__list">
                            @foreach (var dropDown in Model.HomeItem.HeaderConfiguration.HeaderDropDowns)
                            {
                                if (dropDown != null)
                                {
                                    var navigationColumnsCount = 0;
                                    IHeaderNavigationColumn firstNavigationColumn = null;
                                    IEnumerable<IHeaderNavigationColumn> otherNavigationColumns = null;
                                    if (dropDown.NavigationColumns != null && dropDown.NavigationColumns.Any())
                                    {
                                        navigationColumnsCount = dropDown.NavigationColumns.Count();
                                        firstNavigationColumn = dropDown.NavigationColumns.FirstOrDefault();
                                        otherNavigationColumns = dropDown.NavigationColumns.Skip(1);
                                    }
                                    <li class="nav-desktop__item">
                                        @if (dropDown.PageItem != null)
                                        {
                                            <a href="@dropDown.PageItem.Url" class="nav-desktop__link">
                                                @Html.Glass().Editable(dropDown.PageItem, z => z.PageTitle)
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="#" class="nav-desktop__link">
                                                @dropDown.Name
                                            </a>
                                        }
                                        <div class="dropdown">
                                            <div class="dropdown__inner">
                                                <div class="container">
                                                    <div class="row">
                                                        <div class="col-md-3">
                                                            <nav class="dropdown-nav">
                                                                @if (dropDown.ShowCTA)
                                                                {
                                                                    using (Html.Glass().BeginRenderLink(dropDown, z => z.CTALink, new NameValueCollection { { "class", "btn btn-primary btn-block mb-5" } }, isEditable: true))
                                                                    {
                                                                        @Html.Glass().Editable(dropDown, z => z.CTALabel) <i class="icon-arrow-right animate-arrow"></i>
                                                                    }
                                                                }

                                                                @if (firstNavigationColumn != null)
                                                                {
                                                                    <h4 class="dropdown-nav__title">@Html.Glass().Editable(firstNavigationColumn, z => z.ColumnTitle)</h4>
                                                                    if (firstNavigationColumn.ShowColumnLink)
                                                                    {
                                                                        using (Html.Glass().BeginRenderLink(firstNavigationColumn, z => z.ColumnLink, new NameValueCollection { { "class", "link-styles d-block mb-4" } }, isEditable: true))
                                                                        {
                                                                            @Html.Glass().Editable(firstNavigationColumn, z => z.ColumnLinkLabel) <i class="icon-arrow-right"></i>
                                                                        }
                                                                    }
                                                                    if (firstNavigationColumn.PageLinks != null && firstNavigationColumn.PageLinks.Any())
                                                                    {
                                                                        <ul class="dropdown-nav__list">
                                                                            @foreach (var pageLink in firstNavigationColumn.PageLinks)
                                                                            {
                                                                                <li class="dropdown-nav__item">
                                                                                    <a href="@pageLink.Url" class="dropdown-nav__link">@Html.Glass().Editable(pageLink, z => z.PageTitle)</a>
                                                                                </li>
                                                                            }
                                                                        </ul>
                                                                    }
                                                                }
                                                            </nav>
                                                        </div>
                                                        @if (otherNavigationColumns != null && otherNavigationColumns.Any())
                                                        {
                                                            var secondNavigationColumn = otherNavigationColumns.FirstOrDefault();
                                                            <div class="col-md-3 offset-1">
                                                                <nav>
                                                                    <h4 class="dropdown-nav__title">@Html.Glass().Editable(secondNavigationColumn, z => z.ColumnTitle)</h4>
                                                                    @if (secondNavigationColumn.ShowColumnLink)
                                                                    {
                                                                        using (Html.Glass().BeginRenderLink(secondNavigationColumn, z => z.ColumnLink, new NameValueCollection { { "class", "link-styles d-block mb-4" } }, isEditable: true))
                                                                        {
                                                                            @Html.Glass().Editable(secondNavigationColumn, z => z.ColumnLinkLabel) <i class="icon-arrow-right"></i>
                                                                        }
                                                                    }
                                                                    @if (secondNavigationColumn.PageLinks != null && secondNavigationColumn.PageLinks.Any())
                                                                    {
                                                                        <ul class="dropdown-nav__list">
                                                                            @foreach (var pageLink in secondNavigationColumn.PageLinks)
                                                                            {
                                                                                <li class="dropdown-nav__item">
                                                                                    <a href="@pageLink.Url" class="dropdown-nav__link">@Html.Glass().Editable(pageLink, z => z.PageTitle)</a>
                                                                                </li>
                                                                            }
                                                                        </ul>
                                                                    }
                                                                </nav>
                                                            </div>
                                                            var lastNavigationColumn = otherNavigationColumns.Skip(1);
                                                            if (lastNavigationColumn != null && lastNavigationColumn.Any())
                                                            {
                                                                var thirdNavigationColumn = lastNavigationColumn.FirstOrDefault();
                                                                <div class="col-xl-4 col-lg-5 offset-xl-1">
                                                                    <nav>
                                                                        <h4 class="dropdown-nav__title">@Html.Glass().Editable(thirdNavigationColumn, z => z.ColumnTitle)</h4>
                                                                        @if (thirdNavigationColumn.ShowColumnLink)
                                                                        {
                                                                            using (Html.Glass().BeginRenderLink(thirdNavigationColumn, z => z.ColumnLink, new NameValueCollection { { "class", "link-styles d-block mb-4" } }, isEditable: true))
                                                                            {
                                                                                @Html.Glass().Editable(thirdNavigationColumn, z => z.ColumnLinkLabel) <i class="icon-arrow-right"></i>
                                                                            }
                                                                        }
                                                                        @if (thirdNavigationColumn.PageLinks != null && thirdNavigationColumn.PageLinks.Any())
                                                                        {
                                                                            <ul class="dropdown-nav__list">
                                                                                @foreach (var pageLink in thirdNavigationColumn.PageLinks)
                                                                                {
                                                                                    <li class="dropdown-nav__item">
                                                                                        <a href="@pageLink.Url" class="dropdown-nav__link">@Html.Glass().Editable(pageLink, z => z.PageTitle)</a>
                                                                                    </li>
                                                                                }
                                                                            </ul>
                                                                        }
                                                                    </nav>
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                if (dropDown.Images != null && dropDown.Images.Any())
                                                                {
                                                                    <div class="col-xl-4 col-lg-5 offset-xl-1">
                                                                        @if (dropDown.Images.Count() == 1)
                                                                        {
                                                                            var image = dropDown.Images.FirstOrDefault();
                                                                            if (image != null && image.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                                            {
                                                                                var imageSrc = image.Image != null ? !string.IsNullOrEmpty(image.Image.Src) ? image.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg";
                                                                                using (Html.Glass().BeginRenderLink(
                                                                                    image, z => z.Link,
                                                                                    new NameValueCollection {
                                                                                    { "class", "quick-link-chart" },
                                                                                    { "style", "background-image: url('" + imageSrc + "')" } },
                                                                                    isEditable: true))
                                                                                {
                                                                                    <span class="quick-link-chart__title">@Html.Glass().Editable(image, z => z.Title)</span>
                                                                                    <span class="quick-link-chart__text">@Html.Glass().Editable(image, z => z.Description)</span>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <a href="#" class="quick-link-chart" style="background-image: url('@(image.Image != null ? !string.IsNullOrEmpty(image.Image.Src) ? image.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg") ')">
                                                                                    <span class="quick-link-chart__title">@Html.Glass().Editable(image, z => z.Title)</span>
                                                                                    <span class="quick-link-chart__text">@Html.Glass().Editable(image, z => z.Description)</span>
                                                                                </a>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            var firstImage = dropDown.Images.FirstOrDefault();
                                                                            if (firstImage != null && firstImage.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                                            {
                                                                                using (Html.Glass().BeginRenderLink(
                                                                                    firstImage, z => z.Link,
                                                                                    new NameValueCollection {
                                                                                            { "class", "quick-link-chart quick-link-chart__small" },
                                                                                            { "style", "background-image: url('" + firstImage.Image != null ? !string.IsNullOrEmpty(firstImage.Image.Src) ? firstImage.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg" + "')" } },
                                                                                    isEditable: true))
                                                                                {
                                                                                    <span class="quick-link-chart__title">@Html.Glass().Editable(firstImage, z => z.Title)</span>
                                                                                    <span class="quick-link-chart__text">@Html.Glass().Editable(firstImage, z => z.Description)</span>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <a href="#" class="quick-link-chart quick-link-chart__small" style="background-image: url('@(firstImage.Image != null ? !string.IsNullOrEmpty(firstImage.Image.Src) ? firstImage.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg")')">
                                                                                    <span class="quick-link-chart__title">@Html.Glass().Editable(firstImage, z => z.Title)</span>
                                                                                    <span class="quick-link-chart__text">@Html.Glass().Editable(firstImage, z => z.Description)</span>
                                                                                </a>
                                                                            }

                                                                            var secondImage = dropDown.Images.Skip(1).FirstOrDefault();

                                                                            if (secondImage != null && secondImage.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                                            {
                                                                                using (Html.Glass().BeginRenderLink(secondImage, z => z.Link, new NameValueCollection { { "class", "quick-link-chart quick-link-chart__small" }, { "style", "background-image: url('" + secondImage.Image != null ? !string.IsNullOrEmpty(secondImage.Image.Src) ? secondImage.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg" + "')" } },
                                                                                    isEditable: true))
                                                                                {
                                                                                    <span class="quick-link-chart__title">@Html.Glass().Editable(secondImage, z => z.Title)</span>
                                                                                    <span class="quick-link-chart__text">@Html.Glass().Editable(secondImage, z => z.Description)</span>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <a href="#" class="quick-link-chart quick-link-chart__small" style="background-image: url('@(secondImage.Image != null ? !string.IsNullOrEmpty(secondImage.Image.Src) ? secondImage.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg")')">
                                                                                    <span class="quick-link-chart__title">@Html.Glass().Editable(secondImage, z => z.Title)</span>
                                                                                    <span class="quick-link-chart__text">@Html.Glass().Editable(secondImage, z => z.Description)</span>
                                                                                </a>
                                                                            }
                                                                        }
                                                                    </div>
                                                                }

                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (dropDown.Images != null && dropDown.Images.Any())
                                                            {
                                                                var imagesCount = dropDown.Images.Count();
                                                                if (imagesCount == 1)
                                                                {
                                                                    var image = dropDown.Images.FirstOrDefault();
                                                                    if (image != null)
                                                                    {
                                                                        <div class="col-xl-4 col-lg-5 offset-lg-4 offset-xl-5">
                                                                            @if (image.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                                            {
                                                                                using (Html.Glass().BeginRenderLink(
                                                                                    image, z => z.Link,
                                                                                    new NameValueCollection {
                                                                                        { "class", "quick-link-chart" },
                                                                                        { "style", "background-image: url('" + image.Image != null ? !string.IsNullOrEmpty(image.Image.Src) ? image.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg" + "')" } },
                                                                                    isEditable: true))
                                                                                {
                                                                                    <span class="quick-link-chart__title">@Html.Glass().Editable(image, z => z.Title)</span>
                                                                                    <span class="quick-link-chart__text">@Html.Glass().Editable(image, z => z.Description)</span>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <a href="#" class="quick-link-chart" style="background-image: url('@(image.Image !=null ? !string.IsNullOrEmpty(image.Image.Src) ? image.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg")')">
                                                                                    <span class="quick-link-chart__title">@Html.Glass().Editable(image, z => z.Title)</span>
                                                                                    <span class="quick-link-chart__text">@Html.Glass().Editable(image, z => z.Description)</span>
                                                                                </a>
                                                                            }
                                                                        </div>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    var imageCollecion = dropDown.Images;
                                                                    <div class="col-xl-7 col-lg-9 offset-xl-2">
                                                                        <div class="row">
                                                                            <div class="col-md-6">
                                                                                @if (imagesCount == 2)
                                                                                {
                                                                                    var firstImage = dropDown.Images.FirstOrDefault();
                                                                                    if (firstImage != null)
                                                                                    {
                                                                                        if (firstImage.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                                                        {
                                                                                            using (Html.Glass().BeginRenderLink(
                                                                                                firstImage, z => z.Link,
                                                                                                new NameValueCollection {
                                                                                                    { "class", "quick-link-chart" },
                                                                                                    { "style", "background-image: url('" + firstImage.Image != null ? !string.IsNullOrEmpty(firstImage.Image.Src) ? firstImage.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg" + "')" } },
                                                                                                isEditable: true))
                                                                                            {
                                                                                                <span class="quick-link-chart__title">@Html.Glass().Editable(firstImage, z => z.Title)</span>
                                                                                                <span class="quick-link-chart__text">@Html.Glass().Editable(firstImage, z => z.Description)</span>
                                                                                            }
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <a href="#" class="quick-link-chart" style="background-image: url('@(firstImage.Image !=null ? !string.IsNullOrEmpty(firstImage.Image.Src) ? firstImage.Image.Src : string.Empty: string.Empty)')">
                                                                                                <span class="quick-link-chart__title">@Html.Glass().Editable(firstImage, z => z.Title)</span>
                                                                                                <span class="quick-link-chart__text">@Html.Glass().Editable(firstImage, z => z.Description)</span>
                                                                                            </a>
                                                                                        }
                                                                                    }
                                                                                    imageCollecion = imageCollecion.Skip(1);
                                                                                }
                                                                                else
                                                                                {
                                                                                    var firstImage = dropDown.Images.FirstOrDefault();
                                                                                    if (firstImage != null)
                                                                                    {
                                                                                        if (firstImage.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                                                        {
                                                                                            var firstImageSrc = firstImage.Image != null ? !string.IsNullOrEmpty(firstImage.Image.Src) ? firstImage.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg";
                                                                                            using (Html.Glass().BeginRenderLink(
                                                                                                firstImage, z => z.Link,
                                                                                                new NameValueCollection {
                                                                                                    { "class", "quick-link-chart quick-link-chart__small" },
                                                                                                    { "style", "background-image: url('" + firstImageSrc + "')" } },
                                                                                                isEditable: true))
                                                                                            {
                                                                                                <span class="quick-link-chart__title">@Html.Glass().Editable(firstImage, z => z.Title)</span>
                                                                                                <span class="quick-link-chart__text">@Html.Glass().Editable(firstImage, z => z.Description)</span>
                                                                                            }
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <a href="#" class="quick-link-chart quick-link-chart__small" style="background-image: url('@(firstImage.Image !=null ? !string.IsNullOrEmpty(firstImage.Image.Src) ? firstImage.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg")')">
                                                                                                <span class="quick-link-chart__title">@Html.Glass().Editable(firstImage, z => z.Title)</span>
                                                                                                <span class="quick-link-chart__text">@Html.Glass().Editable(firstImage, z => z.Description)</span>
                                                                                            </a>
                                                                                        }
                                                                                    }
                                                                                    var secondImage = dropDown.Images.Skip(1).FirstOrDefault();
                                                                                    if (secondImage != null)
                                                                                    {
                                                                                        if (secondImage.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                                                        {
                                                                                            var secondImageSrc = secondImage.Image != null ? !string.IsNullOrEmpty(secondImage.Image.Src) ? secondImage.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg";
                                                                                            using (Html.Glass().BeginRenderLink(
                                                                                                secondImage, z => z.Link,
                                                                                                new NameValueCollection {
                                                                                                    { "class", "quick-link-chart quick-link-chart__small" },
                                                                                                    { "style", "background-image: url('" + secondImageSrc + "')" } },
                                                                                                isEditable: true))
                                                                                            {
                                                                                                <span class="quick-link-chart__title">@Html.Glass().Editable(secondImage, z => z.Title)</span>
                                                                                                <span class="quick-link-chart__text">@Html.Glass().Editable(secondImage, z => z.Description)</span>
                                                                                            }
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <a href="#" class="quick-link-chart quick-link-chart__small" style="background-image: url('@(secondImage.Image !=null ? !string.IsNullOrEmpty(secondImage.Image.Src) ? secondImage.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg")')">
                                                                                                <span class="quick-link-chart__title">@Html.Glass().Editable(secondImage, z => z.Title)</span>
                                                                                                <span class="quick-link-chart__text">@Html.Glass().Editable(secondImage, z => z.Description)</span>
                                                                                            </a>
                                                                                        }
                                                                                    }
                                                                                    imageCollecion = imageCollecion.Skip(2);
                                                                                }
                                                                            </div>
                                                                            <div class="col-md-6">
                                                                                @if (imagesCount < 4)
                                                                                {
                                                                                    var secondColumnImage = dropDown.Images.FirstOrDefault();
                                                                                    if (secondColumnImage != null)
                                                                                    {
                                                                                        if (secondColumnImage.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                                                        {
                                                                                            var secondColumnImageSrc = secondColumnImage.Image != null ? !string.IsNullOrEmpty(secondColumnImage.Image.Src) ? secondColumnImage.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg";
                                                                                            using (Html.Glass().BeginRenderLink(
                                                                                                secondColumnImage, z => z.Link,
                                                                                                new NameValueCollection {
                                                                                                    { "class", "quick-link-chart" },
                                                                                                    { "style", "background-image: url('" + secondColumnImageSrc + "')" } },
                                                                                                isEditable: true))
                                                                                            {
                                                                                                <span class="quick-link-chart__title">@Html.Glass().Editable(secondColumnImage, z => z.Title)</span>
                                                                                                <span class="quick-link-chart__text">@Html.Glass().Editable(secondColumnImage, z => z.Description)</span>
                                                                                            }
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <a href="#" class="quick-link-chart" style="background-image: url('@(secondColumnImage.Image != null ? !string.IsNullOrEmpty(secondColumnImage.Image.Src) ? secondColumnImage.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg")')">
                                                                                                <span class="quick-link-chart__title">@Html.Glass().Editable(secondColumnImage, z => z.Title)</span>
                                                                                                <span class="quick-link-chart__text">@Html.Glass().Editable(secondColumnImage, z => z.Description)</span>
                                                                                            </a>
                                                                                        }
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    var secondColumnFirstImage = dropDown.Images.FirstOrDefault();
                                                                                    if (secondColumnFirstImage != null)
                                                                                    {
                                                                                        if (secondColumnFirstImage.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                                                        {
                                                                                            using (Html.Glass().BeginRenderLink(
                                                                                                secondColumnFirstImage, z => z.Link,
                                                                                                new NameValueCollection {
                                                                                                    { "class", "quick-link-chart quick-link-chart__small" },
                                                                                                    { "style", "background-image: url('" + secondColumnFirstImage.Image != null ? !string.IsNullOrEmpty(secondColumnFirstImage.Image.Src) ? secondColumnFirstImage.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg" + "')" } },
                                                                                                isEditable: true))
                                                                                            {
                                                                                                <span class="quick-link-chart__title">@Html.Glass().Editable(secondColumnFirstImage, z => z.Title)</span>
                                                                                                <span class="quick-link-chart__text">@Html.Glass().Editable(secondColumnFirstImage, z => z.Description)</span>
                                                                                            }
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <a href="#" class="quick-link-chart quick-link-chart__small" style="background-image: url('@(secondColumnFirstImage.Image != null ? !string.IsNullOrEmpty(secondColumnFirstImage.Image.Src) ? secondColumnFirstImage.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg")')">
                                                                                                <span class="quick-link-chart__title">@Html.Glass().Editable(secondColumnFirstImage, z => z.Title)</span>
                                                                                                <span class="quick-link-chart__text">@Html.Glass().Editable(secondColumnFirstImage, z => z.Description)</span>
                                                                                            </a>
                                                                                        }
                                                                                    }
                                                                                    var secondColumnSecondImage = dropDown.Images.Skip(1).FirstOrDefault();
                                                                                    if (secondColumnSecondImage != null)
                                                                                    {
                                                                                        if (secondColumnSecondImage.Link != null || Sitecore.Context.PageMode.IsExperienceEditor)
                                                                                        {
                                                                                            using (Html.Glass().BeginRenderLink(
                                                                                                secondColumnSecondImage, z => z.Link,
                                                                                                new NameValueCollection {
                                                                                                    { "class", "quick-link-chart quick-link-chart__small" },
                                                                                                    { "style", "background-image: url('" + secondColumnSecondImage.Image != null ? !string.IsNullOrEmpty(secondColumnSecondImage.Image.Src) ? secondColumnSecondImage.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg" + "')" } },
                                                                                                isEditable: true))
                                                                                            {
                                                                                                <span class="quick-link-chart__title">@Html.Glass().Editable(secondColumnSecondImage, z => z.Title)</span>
                                                                                                <span class="quick-link-chart__text">@Html.Glass().Editable(secondColumnSecondImage, z => z.Description)</span>
                                                                                            }
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <a href="#" class="quick-link-chart quick-link-chart__small" style="background-image: url('@(secondColumnSecondImage.Image !=null ? !string.IsNullOrEmpty(secondColumnSecondImage.Image.Src) ? secondColumnSecondImage.Image.Src : "dist/images/components/navigation/charts.svg" : "dist/images/components/navigation/charts.svg")')">
                                                                                                <span class="quick-link-chart__title">@Html.Glass().Editable(secondColumnSecondImage, z => z.Title)</span>
                                                                                                <span class="quick-link-chart__text">@Html.Glass().Editable(secondColumnSecondImage, z => z.Description)</span>
                                                                                            </a>
                                                                                        }
                                                                                    }
                                                                                }
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                }
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </li>
                                }
                            }
                            @if (Model.HomeItem.ContactUsPage != null)
                            {
                                <li class="nav-desktop__item">
                                    <a href="@Model.HomeItem.ContactUsPage.Url" class="nav-desktop__link nav-desktop__link_contact">
                                        @Html.Glass().Editable(Model.HomeItem.ContactUsPage, z => z.PageTitle)
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }

                <a href="#" class="header-navbar__user-link">
                    <img src="dist/images/components/header/user.svg" alt="user profile">
                </a>
                <div class="header-navbar__btn-search">
                    <img src="dist/images/components/header/search.svg" alt="search">
                </div>
            </div>
        </section>
            @Html.Partial("~/Views/Navigation/Menu.cshtml", Model)        
    </header>
}
else if (Sitecore.Context.PageMode.IsExperienceEditor)
{
    @:Issue with navigation: wrong Root/Home item
}