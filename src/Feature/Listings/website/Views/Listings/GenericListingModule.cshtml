@using Glass.Mapper;
@using Glass.Mapper.Sc
@using Glass.Mapper.Sc.Web.Mvc
@model LionTrust.Feature.Listings.Models.IGenericListingFacets
<div class="lister-app legacy-listmode" id="lister-app" data-host="GenericListingApi"
     data-fundfacetid="@Model.Id.ToString()" data-parentid="@Model.Id.ToString()">
    <div class="article-filter-wrapper">
        <div class="article-filters" :class="mobileFilter ? 'active' : ''">
            <div class="article-filters__header">
                <div class="container">
                    <div class="row">
                        <div class="col-lg-2 d-lg-none">
                            <div class="article-filters__main-title">
                                @Html.Glass().Editable(Model, x => x.FiltersLabel)
                                <i id="filters-close" @@click="toggleMobileFilter" class="icon-close"></i>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <form class="search-form" @@submit.prevent="submitSearchForm($event)">
                                <input type="text" v-model="searchText" name="searchText"
                                       class="search-form__input color-black" placeholder="@Model.SearchByKeywordLabel">
                                <button class="search-form__submit pe-0" type="submit">
                                    <i class="icon-search"></i>
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div class="article-filters__body" v-if="getFacetsLength">
                <div class="container">
                    <div class="row">
                        <div class="col-12 article-filters__lists">
                            <select-field inline-template v-for="(facet, i) in getFacets" :key="i">
                                <div class="article-filters__dropdown relative" @@click.stop>
                                    <div class="article-filters__select" @@click="toggleOption"
                                         :class="open ? 'active' : ''">
                                        <span class="article-filters__item-title" :class="active ? 'active' : ''">
                                            {{facet.name}}
                                        </span>
                                        <i class="article-filters__icon-arrow"></i>
                                    </div>
                                    <div class="article-filters__options">
                                        <div class="article-filters__title" @@click="hideOption">
                                            <i class="icon-chevron-left"></i>
                                            {{facet.name}}
                                        </div>
                                        <option-field inline-template v-for="(item, i) in facet.items" :for="item.name"
                                                      :key="i + item.name">
                                            <label class="option-checkbox">
                                                <input :id="item.name" class="option-checkbox__input" type="checkbox"
                                                       v-model="checked" @@change="toggleSelect(item, facet)"
                                                       @@click="setChoosen(!checked)">
                                                <span class="option-checkbox__text">{{item.name}} </span>
                                                <span class="option-checkbox__icon"></span>
                                            </label>
                                        </option-field>
                                    </div>
                                </div>
                            </select-field>
                            <div class="article-filters__controls">
                                <div class="article-filters__btns justify-content-end">
                                    <button class="btn article-filters__btn article-filters__btn_apply d-none d-xl-block"
                                            @@click="applyFilters"
                                            :class="activeButton ? 'article-filters__btn_primary' : ''">
                                        @Html.Glass().Editable(Model, m => m.ApplyFiltersLabel)
                                    </button>
                                    <button class="clear-filter btn article-filters__btn article-filters__btn_clear d-none d-xl-block" @@click="clearFilters">
                                        @Html.Glass().Editable(Model, m => m.ClearAllLabel)
                                    </button>
                                    <btn @@click="applyFilters"
                                         class="btn btn-clean d-none d-md-block d-xl-none"
                                         :class="activeButton ? 'text-primary' : ''"
                                         @@click="toggleMobileFilter">
                                        <i class="icon-filter"></i> @Html.Glass().Editable(Model, m => m.ApplyFiltersLabel)
                                    </btn>
                                    <btn @@click="clearFilters" class="btn btn-clean d-none d-md-block d-xl-none" @@click="toggleMobileFilter">
                                        <i class="icon-refresh"></i> @Html.Glass().Editable(Model, m => m.ClearAllLabel)
                                    </btn>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="article-filters__footer">
                <div class="container">
                    <div class="row">
                        <div class="col-6">
                            <button class="btn btn-primary min-width-100" @@click="applyFilters">
                                @Html.Glass().Editable(Model, x => x.ApplyFiltersLabel)
                            </button>
                        </div>
                        <div class="col-6">
                            <button class="clear-filter btn btn-primary-forward min-width-100" @@click="clearFilters">
                                @Html.Glass().Editable(Model, x => x.ClearAllLabel)
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container d-lg-none" v-if="getFacetsLength">
        <div class="d-flex justify-content-between margin-mob-fliter-btn mt-0" :class="!mobileFilter ? 'relative' : ''">
            <btn id="show-article-fliter" class="btn btn-clean" @@click="toggleMobileFilter">
                <i class="icon-filter"></i> @Html.Glass().Editable(Model, x => x.FilterLabel)
            </btn>
        </div>
    </div>

    <section class="container">
        <div class="text-center my-5" v-if="loading">
            <div class="spinner-border text-gold" role="status"></div>
        </div>
        <!-- <div class="col-lg-6"> -->
        <article-item inline-template v-for="(article, i) in searchData" :key="i + article.identifier">
            <div class="row">
                <div class="col-lg-9" v-if="article.imageWidth > 200 && article.imageUrl">
                    <div class="podcast-list-item">
                        <div class="row">
                            <div class="col-md-6">
                                <img :src="article.imageUrl" :alt="article.title" class="podcast-list-item__img">
                            </div>
                            <div class="col-md-6">
                                <div class="podcast-list-item__title">
                                    {{article.title}}
                                </div>
                                <div class="podcast-list-item__text" v-html="article.text">

                                </div>

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-9" v-if="article.imageWidth <= 200 && article.imageUrl">
                    <div class="services-item">
                        <img :src="article.imageUrl" :alt="article.title" class="services-item__img">
                        <div class="services-item__content">
                            <div class="services-item__title">
                                {{article.title}}
                            </div>
                            <div class="services-item__descript" v-html="article.text"></div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-7" v-if="article.title && !article.subtitle && !article.imageUrl">
                    <div class="list-mod-item">
                        <h2 class="list-mod-item__title">
                            {{article.title}}
                        </h2>
                        <span class="list-mod-item__date">{{article.date}}</span>
                        <div class="list-mod-item__content" v-html="article.text"></div>
                    </div>
                </div>
                <div class="col-lg-7" v-if="!article.title && article.subtitle && !article.imageUrl">
                    <div class="list-mod-item m-0">
                        <div class="list-mod-item__download">
                            <h5>{{article.subtitle}}</h5>
                            <div v-html="article.text"></div>
                        </div>
                    </div>
                </div>
            </div>
        </article-item>
        <div class="row">
            <div class="col-lg-6 offset-lg-3">
                <nav v-if="getPageAmount > 1" class="pagination mt-3">
                    <a href="#" @@click.prevent="prevPage" class="pagination__step pagination__step_forward"
                       :class="disablePrevBtn ? 'pagination__step_disabled' : ''"><i class="icon-arrow-left"></i> @Html.Glass().Editable(Model, x => x.PreviousLabel)</a>
                    <ul class="pagination__list">
                        <li class="pagination__item">
                            <a @@click.prevent="jumpPagesForward" v-if="showForwardPageBtn" href="#"
                               class="pagination__link pagination__link_steps">...</a>
                        </li>
                        <li v-for="(page, i) in getPages" :key="i" class="pagination__item">
                            <a @@click.prevent="changePage(page)" href="#" class="pagination__link"
                               :class="getPage === page ? 'active' : ''">
                                {{page}}
                            </a>
                        </li>
                        <li class="pagination__item">
                            <a @@click.prevent="jumpPagesNext" v-if="showNextPageBtn" href="#"
                               class="pagination__link pagination__link_steps">...</a>
                        </li>
                    </ul>
                    <a href="#" @@click.prevent="nextPage" :class="disabledNextBtn ? 'pagination__step_disabled' : ''"
                       class="pagination__step pagination__step_next">@Html.Glass().Editable(Model, x => x.NextLabel) <i class="icon-arrow-right"></i></a>
                </nav>
            </div>
        </div>
    </section>
</div>
