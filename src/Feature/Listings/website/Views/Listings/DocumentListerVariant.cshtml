@using System.Collections.Specialized
@using Glass.Mapper.Sc.Web.Mvc
@model LionTrust.Feature.Listings.Models.DocumentListerVariantViewModel
@if (Model != null)
{
    <section class="container mb-5" id="tab-content">
        <div class="lister-select d-lg-none">
            <div class="">
                @Html.Glass().Editable(Model.Data, m => m.SelectYearLabel)
            </div>
            <select name="document-filter" id="document-select-filter" data-select-for="tab-content"
                    class="class-dropdown__select document-select-filter">
                <option value="@Model.FirstYear" selected>@Model.FirstYear</option>
                @{
                    var yearsWithoutFirst = Model.Years.Skip(1);
                    foreach (var year in yearsWithoutFirst)
                    {
                        <option value="@year">@year</option>
                    }
                }
            </select>
            <i class="article-filters__icon-arrow  article-filters__icon-arrow_select"></i>
        </div>
        <div class="tab-nav d-none d-lg-flex row" data-select-for="tab-content">
            <div class=" col-md-2">
                <div class="tab-nav__item-text">
                    @Html.Glass().Editable(Model.Data, m => m.SelectYearLabel)
                </div>
            </div>
            <div class="col-md-2">
                <div class="tab-nav__item active" data-tab-target="@Model.FirstYear">
                    @Model.FirstYear
                </div>
            </div>
            @foreach (var year in yearsWithoutFirst)
            {
                <div class="col-md-2">
                    <div class="tab-nav__item" data-tab-target="@year">
                        @year
                    </div>
                </div>
            }
        </div>
        <div class="tab-nav-content">
            @foreach (var yearDocument in Model.DocumentsByYears)
            {
                <div class="doc-list @(yearDocument.Year.Equals(Model.FirstYear) ? "active" : string.Empty)" role="tabelement" id="@yearDocument.Year">
                    @foreach (var document in yearDocument.Documents)
                    {
                        <div class="doc-list__item">
                            <div class="row align-items-center">
                                <div class="col-lg-2 col-md-1">
                                    <span class="doc-list__title">
                                        @using (Html.Glass().BeginEditFrame(document, "Edit Article Date", x => x.Date))
                                        {
                                            if (Sitecore.Context.PageMode.IsExperienceEditor || document.Date != DateTime.MinValue)
                                            {
                                                @document.Date.ToString("dd/MM/yy")
                                            }
                                            else
                                            {
                                                @document.Created.ToString("dd/MM/yy")
                                            }
                                        }
                                    </span>
                                </div>
                                <div class="col-lg-12 col-xl-5">
                                    <span class="doc-list__title">
                                        @Html.Glass().Editable(document, d => d.Title)
                                    </span>
                                </div>
                                <div class="col-lg-12 col-xl-5">
                                    <div class="doc-list__links">
                                        @using (Html.Glass().BeginRenderLink(document, d => d.PressReleaseDocument, new NameValueCollection { { "class", "link-styles link-styles_black-mobile" }, { "target", "_blank" } }))
                                        {
                                            @Html.Glass().Editable(Model.Data, d => d.PressReleaseLabel)
                                            <i class="icon-file"></i>
                                        }

                                        @using (Html.Glass().BeginRenderLink(document, d => d.ReportDocument, new NameValueCollection { { "class", "link-styles link-styles_black-mobile" }, { "target", "_blank" } }))
                                        {
                                            @Html.Glass().Editable(Model.Data, d => d.ReportLabel)
                                            <i class="icon-list-view"></i>
                                        }

                                        @using (Html.Glass().BeginRenderLink(document, d => d.PresentationLink, new NameValueCollection { { "class", "link-styles link-styles_black-mobile" }, { "target", "_blank" } }))
                                        {
                                            @Html.Glass().Editable(Model.Data, d => d.PresentationLabel)
                                            <i class="icon-arrow-right"></i>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </section>
}