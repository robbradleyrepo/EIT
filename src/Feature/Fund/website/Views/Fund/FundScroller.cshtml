@using Glass.Mapper.Sc.Web.Mvc
@using LionTrust.Foundation.Analytics.Goals
@using LionTrust.Foundation.ORM.Extensions;
@using FundConstants = LionTrust.Feature.Fund.Constants;
@model LionTrust.Feature.Fund.Models.IFundScroller

@{ 
    var isFundDashboard = Sitecore.Context.Item.TemplateID.ToString().Equals(FundConstants.FundDashboard.PageTemplateId);
    var compClass = isFundDashboard ? "fundscroller__dashboard" : string.Empty;
    var colClass = isFundDashboard ? "col-lg-5 col-xl-4" : "col-lg-5";
}

@if (Model != null)
{
    <div class="fundscroller relative @compClass" style="@Model.BackgroundImage.GetSafeBackgroundImageStyle()">
        <div class="container">
            <div class="fundscroller__box">
                <div class="row">
                    <div class="imagepromo__content">
                        <div class="@colClass">
                            <div class="fundscroller__left">
                                <div class="imagepromo__content">
                                    <div class="imagepromo__headbox">
                                        <h2>@Html.Glass().Editable(m => m.Heading)</h2>
                                    </div>
                                    <div class="imagepromo__contentbox txtlimit tenline @(Model.TextColour != null ? Model.TextColour.Value : string.Empty)">
                                        <p>
                                            <b>
                                                @Html.Glass().Editable(m => m.Subtitle)
                                            </b>
                                        </p>
                                        <p class="font-300">
                                            @Html.Glass().Editable(m => m.Description)
                                        </p>
                                    </div>
                                    <div class="imagepromo__btnbox">
                                        @using (@Html.Glass().BeginRenderLinkWithGoal(Model, m => m.PrimaryCta, Model.PrimaryCtaGoalId, new System.Collections.Specialized.NameValueCollection { { "class", "btn btn-primary imagepromo__btn" } }, isEditable: true))
                                        {
                                            if (Model.PrimaryCta != null)
                                            {
                                                @Model.PrimaryCta.Text
                                                <i class="icon-arrow-right imagepromo__arrow animate-arrow"></i>
                                            }
                                            else if (Sitecore.Context.PageMode.IsExperienceEditor)
                                            {
                                                @: Edit primary link
                                            }
                                        }

                                        @using (@Html.Glass().BeginRenderLinkWithGoal(Model, m => m.SecondaryCta, Model.SecondaryCtaGoalId, new System.Collections.Specialized.NameValueCollection { { "class", "btn btn-primary-forward imagepromo__btn" } }, isEditable: true))
                                        {
                                            if (Model.SecondaryCta != null)
                                            {
                                                @Model.SecondaryCta.Text
                                                <i class="icon-arrow-right imagepromo__arrow animate-arrow"></i>
                                            }
                                            else if (Sitecore.Context.PageMode.IsExperienceEditor)
                                            {
                                                @: Edit secondary link
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container fundscroller-container">
            <!-- Swiper -->
            <div class="swiper-container-funds">
                <div class="swiper-wrapper row">
                    @foreach (var item in Model.Funds)
                    {
                        <div class="swiper-slide col-10 col-sm-7 col-md-6 col-lg-5 col-xl-4">

                            @using (Html.Glass().BeginRenderLink(item, i => i.CTA, new { @class = "fund-card" }, isEditable: true))
                            {
                                <div class="fund-card__head">
                                    @Html.Glass().Editable(item, i => i.Image)
                                </div>
                                <div class="fund-card__content">
                                    <span class="fund-card__subtitle">@Html.Glass().Editable(item, i => i.Heading)</span>
                                    <span class="fund-card__title">
                                        @Html.Glass().Editable(@item, i => i.FundName)
                                    </span>
                                    <div class="fund-card__text">
                                        <div class="fund-card__text-top">
                                            <p class="txtlimit tenline">
                                                @if (Sitecore.Context.PageMode.IsExperienceEditor)
                                                {
                                                    @Html.Glass().Editable(item, i => i.Description)
                                                }
                                                else if (!string.IsNullOrEmpty(item.Description) && item.Description.Count() > 420)
                                                {
                                                    @item.Description.Substring(0, 420) @:...
                                                }
                                                else
                                                {
                                                    @item.Description
                                                }
                                            </p>
                                        </div>
                                        <div class="fund-card__text-bottom">
                                            <span class="link-styles">
                                                @if (item.CTA != null && !string.IsNullOrWhiteSpace(item.CTA.Text))
                                                {
                                                    @item.CTA.Text
                                                }
                                                <i class="icon-arrow-right"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}
