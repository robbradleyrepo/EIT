@using Glass.Mapper.Sc.Web.Mvc
@model LionTrust.Feature.Fund.Models.KeyInfoPriceViewModel
@if (Model != null && Model.Component != null && Model.ClassData != null)
{
    <div class="card">
        <div class="card__content">
            <span class="card__title">
                @Html.Glass().Editable(Model.Component, m => m.KeyInformationLabel)
            </span>
            <div class="card__row">
                <div class="card__item-left">@Html.Glass().Editable(Model.Component, m => m.SectorLabel)</div>
                <div class="card__item-right">
                    @Model.ClassData.SectorName
                </div>
            </div>
            <div class="card__row">
                <div class="card__item-left">@Html.Glass().Editable(Model.Component, m => m.ManagerInceptionDateLabel)</div>
                <div class="card__item-right">
                    @Model.ClassData.ManagerInceptionDateOfFund.ToString("dd.MM.y")
                </div>
            </div>
            <div class="card__row">
                <div class="card__item-left">@Html.Glass().Editable(Model.Component, m => m.ClassLaunchDateLabel)</div>
                <div class="card__item-right">
                    @Model.ClassData.ClassLaunchDate.ToString("dd.MM.y")
                </div>
            </div>
            @if (!string.IsNullOrWhiteSpace(Model.ClassData.Comparator1) && !string.IsNullOrWhiteSpace(Model.Component.Comparator1Label))
            {
                <div class="card__row">
                    <div class="card__item-left">@Html.Glass().Editable(Model.Component, m => m.Comparator1Label)</div>
                    <div class="card__item-right">@Model.ClassData.Comparator1</div>
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(Model.ClassData.Comparator2) && !string.IsNullOrWhiteSpace(Model.Component.Comparator2Label))
            {
                <div class="card__row">
                    <div class="card__item-left">@Html.Glass().Editable(Model.Component, m => m.Comparator2Label)</div>
                    <div class="card__item-right">@Html.Glass().Editable(Model.Fund, m => m.BenchmarkName)</div>
                </div>
            }
            <div class="card__row">
                <div class="card__item-left">@Html.Glass().Editable(Model.Component, m => m.TargetBenchmarkYieldLabel)</div>
                <div class="card__item-right">@Html.Glass().Editable(Model.ClassData, m => m.TargetBenchmarkYield)</div>
            </div>
        </div>
        <div class="card__content">
            <span class="card__title">
                @Html.Glass().Editable(Model.Component, m => m.PriceLabel)
            </span>
            <div class="card__row">
                <div class="card__item-left">@Html.Glass().Editable(Model.Component, m => m.SinglePriceLabel)</div>
                <div class="card__item-right">@Model.ClassData.SinglePrice</div>
            </div>
            <div class="card__row">
                <div class="card__item-left">@Html.Glass().Editable(Model.Component, m => m.OfferPriceLabel)</div>
                <div class="card__item-right">@Model.ClassData.OfferPrice</div>
            </div>
            <div class="card__row">
                <div class="card__item-left">
                    @Html.Glass().Editable(Model.Component, m => m.PriceDateLabel)
                    @if (Sitecore.Context.PageMode.IsExperienceEditor)
                    {
                        @Html.Glass().Editable(Model.Component, m => m.PriceDateTooltipLabel)
                    }
                    else
                    {
                        <span class="d-inline-flex" data-toggle="tooltip" data-placement="right"
                              title="@Model.Component.PriceDateTooltipLabel">
                            <i class="icon-follow text-gold"></i>
                        </span>
                    }
                </div>
                <div class="card__item-right">
                    @if (Sitecore.Context.PageMode.IsExperienceEditor)
                    {
                        if (Model.ClassData.PriceDate != null)
                        {
                            @Model.ClassData.PriceDate.ToString("dd.MM.yyyy")
                        }
                        else
                        {
                            @:Edit Key Info Price Dates
                        }
                    }
                    else
                    {
                        @Model.ClassData.PriceDate.ToString("dd.MM.yyyy")
                    }
                </div>


            </div>


        </div>
    </div>
}
else if (Sitecore.Context.PageMode.IsExperienceEditor)
{
    <div style="background-color:white"><span style="color:black">Please add datasource to Key Info and Price component</span></div>
}