@using Sitecore.Links
@using Sitecore.Mvc.Analytics.Extensions
@using Sitecore.Web
@using LionTrust.Foundation.SitecoreExtensions.Extensions
@{
    Layout = null;
}
@using LionTrust.Project.LionTrust
<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>@Html.Sitecore().Field("BrowserTitle", new { DisableWebEdit = true })</title>
    @Html.Sitecore().VisitorIdentification()
    <link rel="icon" href="/dist/images/favicon.ico">
    <link rel="stylesheet" href="/dist/css/styles.min.css">
    <link rel="canonical" href="@Html.Sitecore().CurrentItem.GetCanonicalUrl()">
</head>

@{
    var bodyClass = string.Empty;
    switch (@Html.Sitecore().CurrentItem.TemplateID.ToString())
    {
        case Constants.PageTypes.HomeTemplateId:
            bodyClass = "main-page";
            break;
        case Constants.PageTypes.FundPageTemplateId:
            bodyClass = "fund-detail-page";
            break;
        case Constants.PageTypes.InsightPageTemplateId:
            bodyClass = "article-page";
            break;
        case Constants.PageTypes.FundListerPageTemplateId:
            bodyClass = "find-lister-page";
            break;
        case Constants.PageTypes.FundDashboardPageTemplateId:
            bodyClass = "fund-dashboard";
            break;
        case Constants.PageTypes.SearchPageTemplateId:
            bodyClass = "search-page";
            break;
    }

    var mainClass = string.Empty;
    switch (@Html.Sitecore().CurrentItem.TemplateID.ToString())
    {
        case Constants.PageTypes.HomeTemplateId:
            mainClass = "main-page-conentent";
            break;
        case Constants.PageTypes.SearchPageTemplateId:
            mainClass = "result-list-app";
            break;
    }

    var isExperienceEditor = Sitecore.Context.PageMode.IsExperienceEditor ? "experience-editor" : string.Empty;
}

<body class="@bodyClass @isExperienceEditor">
    @Html.Sitecore().Placeholder("header")
    <main id="main" role="main" class="@mainClass">
        @Html.Sitecore().Placeholder("main")
    </main>
    @Html.Sitecore().Placeholder("footer")

    <script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script src="/dist/js/app.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="/dist/js/listing-page.min.js"></script>
    <script src="/dist/js/charts-page.min.js"></script>
    @if (Html.Sitecore().CurrentItem.TemplateID.ToString() == Constants.PageTypes.SearchPageTemplateId)
    {
        <script src="/dist/js/search-page.min.js"></script>
    }
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script src="https://pagecdn.io/lib/zepto/1.2.0/zepto.min.js"></script>
    @if (!Sitecore.Context.PageMode.IsExperienceEditor)
    {
        <script src="/assets/js/addAnalyticsTracking.js"></script>
    }
    <script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
    @if (Html.Sitecore().CurrentItem.TemplateID.ToString() == Constants.PageTypes.HomeTemplateId)
    {
        <div class="paralax-circle">
            <div class="paralax-circle__item" style="transform: translate3d(0px, 92.9684px, 0px);"></div>
        </div>
    }
    @if (new List<string> { Constants.PageTypes.FundListerPageTemplateId, Constants.PageTypes.FundDashboardPageTemplateId }.Contains(Html.Sitecore().CurrentItem.TemplateID.ToString()))
    {
        <div class="lit-overlay__wrapper"></div>
    }
</body>
</html>