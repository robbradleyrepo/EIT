/* 
 * ---------------------------------------- *
 * Name: 	Serialise                       *
 * Type: 	JavaScript Class                *
 * Version: v2.2.0                          *
 * Author:	Matt O'Neill                    *
 * Status:	Release                         *
 * ---------------------------------------- *
 */

(function (n) { window.serialise || (window.serialise = {}); window.serialise = new function () { var t = function () { }, r = function (n) { var i = []; for (var t in n) n.hasOwnProperty(t) && i.push(encodeURIComponent(t) + "=" + encodeURIComponent(n[t])); return i.join("&") }, u = function (n) { var i = {}, r = n.indexOf("#") != -1 ? n.split("#")[1].split("&") : n.split("?")[1].split("&"), u, t; for (u in r) t = r[u].split("="), i[decodeURIComponent(t[0])] = decodeURIComponent(t[1]); return i }, i = function (n) { function r(n, t) { for (var i in t) try { n[i] = t[i].constructor == Object ? r(n[i], t[i]) : t[i] } catch (u) { n[i] = t[i] } return n } function e(n, t) { for (var r, u = r = {}, i = 0; i < n.length; i++) r = r[n[i]] = i === n.length - 1 ? t : {}; return u } var i = {}, t, u, f; for (t in n) t.indexOf(".") !== -1 ? (u = t.split("."), f = e(u, n[t]), i = r(i, f)) : i[t] = n[t]; return i }; if (typeof jQuery != "undefined") var f = function () { var i = {}, n = arguments[0].serializeArray(); for (var t in n) i[n[t].name] !== undefined ? (i[n[t].name].push || (i[n[t].name] = [i[n[t].name]]), i[n[t].name].push(n[t].value || "")) : i[n[t].name] = n[t].value || ""; return i }, e = function (t, i) { function f(n) { return n.split("-").map(function (n, t) { return (t ? n[0].toUpperCase() : n[0]) + n.slice(1).toLowerCase() }).join("") } function e(n, t) { return (n === "" || n === undefined || n === null) && t && (n = t), n } var r = this, u = f(i); return t.find("[data-" + i + "]").each(function () { var t = n(this), i = t.data(); r[i[u]] = t.is("select") && i.rawValue == !0 ? t.children("option:selected").text() : t.is(":checkbox") ? t.is(":checked") : e(t.val(), t.data().sentinel); i.format === "number" && (r[i[u]] = parseFloat(r[i[u]].replace(/,/g, ""))) }), t.find("[data-" + i + "-group]").each(function () { var u = n(this), e = u.data(), t = []; u.children().each(function () { var r = n(this).find('input[type="checkbox"]:checked, input[type="radio"]:checked'), i = e.rawValue ? r.attr("data-id") : r.attr("name"); i !== "" && i !== undefined && t.push(i) }); t.length > 0 && (r[e[f(i + "-group")]] = t) }), r }, o = function (n, t) { var r = {}, u = new e(n, t); for (var f in u) r[f] = u[f]; return i(r) }; return typeof jQuery != "undefined" && (t.prototype.jQueryObj = f, t.prototype.jQueryData = o), t.prototype.obj = r, t.prototype.url = u, t.prototype.complex = i, new t } })(jQuery);