<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Codehouse.Common.DeploymentChecker</name>
    </assembly>
    <members>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckBase">
            <summary>
            A simple base class representing a deployment check.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.IDeploymentCheck">
            <summary>
            Interface representing a deployment check
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.IDeploymentCheck.Execute">
            <summary>
            Executes the check.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.IDeploymentCheck.Category">
            <summary>
            Gets a string indicating the category of the check.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.IDeploymentCheck.Subcategory">
            <summary>
            Gets a string indicating the subcategory of the check.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.IDeploymentCheck.Result">
            <summary>
            Gets a value indicating the result of the check.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.IDeploymentCheck.Summary">
            <summary>
            Gets a string indicating the summary message of the check.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.IDeploymentCheck.Detail">
            <summary>
            Gets a string indicating the detail message of the check.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.IDeploymentCheck.Id">
            <summary>
            Gets a string indicating the ID of the check.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.IDeploymentCheck.Name">
            <summary>
            Gets a string indicating the name of the check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckBase.#ctor(Codehouse.Common.DeploymentChecker.Checks.CheckCategories,Codehouse.Common.DeploymentChecker.Checks.CheckCategories)">
            <summary>
            Creates an instance of the check.
            </summary>
            <param name="category">Category of the check</param>
            <param name="subcategory">Subcategory of the check</param>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckBase.Execute">
            <summary>
            Executes the check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckBase.PerformCheck">
            <summary>
            Perform a specific check of a deployment.  Any problems should be flagged
            by throwing a <see cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException"/>.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Indicates the check failed for some reason</exception>
            <exception cref="T:System.Exception">Indicates that something went wrong and the check was inconclusive</exception>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckBase.Id">
            <summary>
            Gets or sets the ID of the check
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckBase.Name">
            <summary>
            Gets or sets the name of the check
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckBase.Category">
            <summary>
            Gets the category of the check
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckBase.Subcategory">
            <summary>
            Gets the subcategory of the check
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckBase.Result">
            <summary>
            Gets a value indicating whether the check passed the last time it was executed.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckBase.Summary">
            <summary>
            Summary of the check result
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckBase.Detail">
            <summary>
            Detail about the check result
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckBase.SummaryPattern">
            <summary>
            Pattern for the summary message
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckBase.DetailPattern">
            <summary>
            Pattern for the detail message
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckBase.IgnoreCm">
            <summary>
            Gets or sets a value indicating whether this check should be ignored on nodes marked
            as CM nodes.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckBase.IgnoreCd">
            <summary>
            Gets or sets a value indicating whether this check should be ignored on nodes marked
            as CD nodes.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckConfigBase`1">
            <summary>
            A base class for checks which fetch a particular configuration section from the <c>web.config</c>
            and perform a check upon that confiugration section.
            </summary>
            <typeparam name="T">Type of the configuration section</typeparam>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckConfigBase`1.#ctor(System.String,Codehouse.Common.DeploymentChecker.Checks.CheckCategories,Codehouse.Common.DeploymentChecker.Checks.CheckCategories)">
            <summary>
            Creates an instance of the check.
            </summary>
            <param name="configSection">Path of the configuration section to fetch</param>
            <param name="category">Category of the check</param>
            <param name="subcategory">Subcategory of the check</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">If the configuration is not valid.</exception>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckConfigBase`1.PerformCheck">
            <summary>
            Perform a specific check of a deployment.  Any problems should be flagged
            by throwing a <see cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException"/>.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckConfigBase`1.CheckConfiguration(`0)">
            <summary>
            Checks the received configuration section
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckConfigXmlBase">
            <summary>
            A class to provide the ability to perform a check upon the raw XML of a particular configuration section.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckConfigXmlBase.#ctor(System.String,Codehouse.Common.DeploymentChecker.Checks.CheckCategories,Codehouse.Common.DeploymentChecker.Checks.CheckCategories)">
            <summary>
            Creates a new instance of the check
            </summary>
            <param name="configSection">Section to read</param>
            <param name="category">Check category</param>
            <param name="subcategory">Check subcategory</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">If the configuration is not valid.</exception>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckConfigXmlBase.CheckConfiguration(System.Configuration.ConfigurationSection)">
            <summary>
            Checks the received configuration section
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckConfigXmlBase.CheckConfiguration(System.Xml.Linq.XDocument)">
            <summary>
            Checks the received configuration section XML
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.CheckResultComparer">
            <summary>
            Compares two results - used in sorting of results in the test runner.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.CheckResultComparer.Compare(Codehouse.Common.DeploymentChecker.Checks.CheckResults,Codehouse.Common.DeploymentChecker.Checks.CheckResults)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x"/> and <paramref name="y"/>, as shown in the following table.Value Meaning Less than zero<paramref name="x"/> is less than <paramref name="y"/>.Zero<paramref name="x"/> equals <paramref name="y"/>.Greater than zero<paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
            <param name="x">The first object to compare.</param><param name="y">The second object to compare.</param>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Infrastructure.CheckCpuCores">
            <summary>
            Checks that the server has a requisite number of CPU cores.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Infrastructure.CheckCpuCores.#ctor">
            <summary>
            Creates an instance of the check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Infrastructure.CheckCpuCores.PerformCheck">
            <summary>
            Perform a specific check of a deployment.  Any problems should be flagged
            by throwing a <see cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException"/>.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Infrastructure.CheckCpuCores.RequiredCores">
            <summary>
            Gets or sets the number of CPU cores required by this check.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckDatabaseCacheSizes">
            <summary>
            Check to validate database cache sizes reach a certain minimum threshold.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckDatabaseCacheSizes.#ctor">
            <summary>
            Create an instance of the check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckDatabaseCacheSizes.GetCacheSize(Sitecore.Data.Database)">
            <summary>
            Gets the cache size in bytes.
            </summary>
            <param name="database">Database for which cache should be retrieved</param>
            <returns>Size of the cache in bytes.</returns>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckDatabaseCacheSizes.PerformCheck">
            <summary>
            Perform a specific check of a deployment.  Any problems should be flagged
            by throwing a <see cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException"/>.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckDatabaseCacheSizes.MinimumSize">
            <summary>
            Gets or sets a string (e.g. 200MB) indicating the minimum acceptable
            size of the caches.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckDatabaseCacheSizes.CacheNamePattern">
            <summary>
            Gets or sets the pattern to be used for matching cache names.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckDatabaseCacheSizes.DetailPrefixPattern">
            <summary>
            Gets or sets the format string for the detailed message prefix.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckExecutePermissions">
            <summary>
            Check to determine whether IIS has execute permissions in a particular folder
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckFileDownloadBase">
            <summary>
            Check to facilitate downloading of a file from the server, and then performing
            some check on the response.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckFileDownloadBase.#ctor(Codehouse.Common.DeploymentChecker.Checks.CheckCategories,Codehouse.Common.DeploymentChecker.Checks.CheckCategories)">
            <summary>
            Create an instance of the check
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckFileDownloadBase.CheckResponse(System.Net.HttpWebResponse)">
            <summary>
            Check the response of the request determine whether the check passes or fails.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">If response content is not what was desired</exception>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckFileDownloadBase.Dispose">
            <summary>
            Perform any clean-up necessary after executing the check.  This method will always be called.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckFileDownloadBase.PerformCheck">
            <summary>
            Perform a specific check of a deployment.  Any problems should be flagged
            by throwing a <see cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException"/>.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
            <exception cref="T:System.InvalidOperationException">FilePath has not been initialised.</exception>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckFileDownloadBase.WriteFileContent(System.IO.StreamWriter)">
            <summary>
            Write any content to the file.
            </summary>
            <param name="writer">File stream writer</param>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckFileDownloadBase.GetResponseContent(System.Net.HttpWebResponse)">
            <summary>
            Gets the response body from a <see cref="T:System.Net.HttpWebResponse"/> instance.
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckFileDownloadBase.Folder">
            <summary>
            Gets or sets the folder on the server
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckFileDownloadBase.FileName">
            <summary>
            Gets or sets the filename on the server ($id will be replaced by a GUID).
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckFileDownloadBase.FilePath">
            <summary>
            Gets the path of the file in the filesystem.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.BaseCheckers.CheckFileDownloadBase.FileUrl">
            <summary>
            Gets the URL of the file.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckExecutePermissions.#ctor">
            <summary>
            Creates an instance of the check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckExecutePermissions.CheckResponse(System.Net.HttpWebResponse)">
            <summary>
            Check the response of the request determine whether the check passes or fails.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">If response content is not what was desired</exception>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckExecutePermissions.WriteFileContent(System.IO.StreamWriter)">
            <summary>
            Write any content to the file.
            </summary>
            <param name="writer">File stream writer</param>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckFileDownloadIsBlocked">
            <summary>
            Checks that the download of a particular URL does not return a 200 response.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckFileDownloadIsBlocked.#ctor">
            <summary>
            Creates an instance of the check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckFileDownloadIsBlocked.CheckResponse(System.Net.HttpWebResponse)">
            <summary>
            Check the response of the request determine whether the check passes or fails.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">If response content is not what was desired</exception>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckFileDownloadIsBlocked.WriteFileContent(System.IO.StreamWriter)">
            <summary>
            Write any content to the file.
            </summary>
            <param name="writer">File stream writer</param>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckFileDownloadIsBlocked.Extension">
            <summary>
            Gets or sets the extension to be used for the file.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckHttpHeaderIsNotPresent">
            <summary>
            Checks that a named HTTP Header is not present in responses.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckHttpHeaderIsNotPresent.#ctor">
            <summary>
            Creates an instance of the check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckHttpHeaderIsNotPresent.CheckResponse(System.Net.HttpWebResponse)">
            <summary>
            Check the response of the request determine whether the check passes or fails.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">If response content is not what was desired</exception>
            <exception cref="T:System.ApplicationException">If file cannot be downloaded from server. </exception>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckHttpHeaderIsNotPresent.WriteFileContent(System.IO.StreamWriter)">
            <summary>
            Write any content to the file.
            </summary>
            <param name="writer">File stream writer</param>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckHttpHeaderIsNotPresent.HeaderName">
            <summary>
            Name of the header.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckHttpHeaderIsNotPresent.CouldNotDownloadPattern">
            <summary>
            Format pattern for when file cannot be downloaded.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckSystemWebServerElementIsNotPresent">
            <summary>
            Checks that a particular element is not present in the <c>system.webServer</c> configuration
            section.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckSystemWebServerElementIsNotPresent.#ctor">
            <summary>
            Creates an instance of the check.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">If the configuration is not valid.</exception>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckSystemWebServerElementIsNotPresent.CheckConfiguration(System.Xml.Linq.XDocument)">
            <summary>
            Checks the received configuration section XML
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckSystemWebServerElementIsNotPresent.ParentName">
            <summary>
            Name of the parent element.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckSystemWebServerElementIsNotPresent.ElementName">
            <summary>
            Name of the element to be checked.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckSystemWebServerElementIsNotPresent.AttributeName">
            <summary>
            Name of the attribute on element to be checked.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckSystemWebServerElementIsNotPresent.AttributeValue">
            <summary>
            Value of the attribute on element to be checked.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Infrastructure.CheckRam">
            <summary>
            Check to determine whether the server has a requisite amount of RAM installed.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Infrastructure.CheckRam.#ctor">
            <summary>
            Creates an instance of the check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Infrastructure.CheckRam.PerformCheck">
            <summary>
            Perform a specific check of a deployment.  Any problems should be flagged
            by throwing a <see cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException"/>.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Infrastructure.CheckRam.RequiredMemory">
            <summary>
            Gets or sets a string (e.g. 4GB) indicating the amount of RAM required by this test.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.CheckCategories">
            <summary>
            A set of categories that can be assigned to deployment checks.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckCategories.None">
            <summary>
            No category.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckCategories.Tuning">
            <summary>
            Check is to do with performance tuning.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckCategories.Caching">
            <summary>
            Check is to do with caching.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckCategories.Processing">
            <summary>
            Check is to do with CPU usage.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckCategories.LoadTime">
            <summary>
            Check is to do with page load time.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckCategories.Hardening">
            <summary>
            Check is to do with security hardening.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckCategories.AttackSurface">
            <summary>
            Check is to do with reducing the attack surface of the solution.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckCategories.InformationDisclosure">
            <summary>
            Check is to do with reducing/eliminating a particular information disclosure scenario.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckCategories.Tampering">
            <summary>
            Check is to do with mitigating a particular vulnerability.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckCategories.PrivilegeEscalation">
            <summary>
            Check is to do with a particular privilege escalation vulnerability.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckCategories.Infrastructure">
            <summary>
            Check is to do with infrastructure.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckCategories.ServerSpecification">
            <summary>
            Check is to do with server hardware.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckCategories.ServerConfiguration">
            <summary>
            Check is to do with server configuration.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckCategories.Miscellaneous">
            <summary>
            Check belongs to some other category.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">
            <summary>
            Exception representing the failure of a check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.CheckException.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of the exception.
            </summary>
            <param name="message">Summary message</param>
            <param name="detailedMessage">Detailed message</param>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.CheckException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Creates an instance of the exception.
            </summary>
            <param name="message">Summary message</param>
            <param name="detailedMessage">Detailed message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.CheckException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            For serialisation purposes.
            </summary>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.CheckException.DetailedMessage">
            <summary>
            A detailed message for the exception.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.CheckResults">
            <summary>
            A set of result states for <see cref="T:Codehouse.Common.DeploymentChecker.IDeploymentCheck"/> classes.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckResults.None">
            <summary>
            No result - test has not been executed.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckResults.Inconclusive">
            <summary>
            Test was not conclusive - typically because an exception occurred during the check.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckResults.Ignored">
            <summary>
            The test was ignored for some reason.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckResults.Passed">
            <summary>
            The test was successful.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckResults.Failed">
            <summary>
            The test was unsuccessful.
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Checks.CheckResults.Mitigated">
            <summary>
            The test was unsuccessful, but a mitigation of the check has been logged.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckAdminPasswordChanged">
            <summary>
            Checks that the admin password is not set to the default value.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckAdminPasswordChanged.#ctor">
            <summary>
            Creates an instance of the check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckAdminPasswordChanged.PerformCheck">
            <summary>
            Perform a specific check of a deployment.  Any problems should be flagged
            by throwing a <see cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException"/>.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckDataFolderLocation">
            <summary>
            Checks that the data folder is either outside the webroot or within the <c>App_Data</c> folder.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckDataFolderLocation.#ctor">
            <summary>
            Creates an instance of the check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckDataFolderLocation.PerformCheck">
            <summary>
            Perform a specific check of a deployment.  Any problems should be flagged
            by throwing a <see cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException"/>.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckDebugCompilationIsDisabled">
            <summary>
            Checks that debug compilation of ASP.Net pages and controls is disabled.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckDebugCompilationIsDisabled.#ctor">
            <summary>
            Creates an instance of the check.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">If the configuration is not valid.</exception>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckDebugCompilationIsDisabled.CheckConfiguration(System.Web.Configuration.CompilationSection)">
            <summary>
            Checks the received configuration section
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckLoginFormAutoCompleteIsDisabled">
            <summary>
            Checks that auto-completion is disabled on the Sitecore login form.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckLoginFormAutoCompleteIsDisabled.#ctor">
            <summary>
            Creates an instance of the check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckLoginFormAutoCompleteIsDisabled.PerformCheck">
            <summary>
            Perform a specific check of a deployment.  Any problems should be flagged
            by throwing a <see cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException"/>.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckTraceIsDisabled">
            <summary>
            Check that ASP.Net tracing is disabled.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckTraceIsDisabled.#ctor">
            <summary>
            Create an instance of the check
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">If the configuration is not valid.</exception>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckTraceIsDisabled.CheckConfiguration(System.Web.Configuration.TraceSection)">
            <summary>
            Checks the received configuration section
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckWcfBehavioursDoNotHaveDiscoverableMetadata">
            <summary>
            Check to determine that WCF behaviours present do not have discoverable metadata.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckWcfBehavioursDoNotHaveDiscoverableMetadata.#ctor">
            <summary>
            Creates an instance of the check.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">If the configuration is not valid.</exception>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckWcfBehavioursDoNotHaveDiscoverableMetadata.CheckConfiguration(System.ServiceModel.Configuration.BehaviorsSection)">
            <summary>
            Checks the received configuration section
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckWcfBehavioursDoNotHaveDiscoverableMetadata.DetailPrefixPattern">
            <summary>
            Gets or sets a format string used for the detailed message prefix.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckWcfBehavioursDoNotLeakFaultInformation">
            <summary>
            Check to determine whether any WCF behaviours are set to reveal fault information to clients.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckWcfBehavioursDoNotLeakFaultInformation.#ctor">
            <summary>
            Creates an instance of the check
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">If the configuration is not valid.</exception>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckWcfBehavioursDoNotLeakFaultInformation.CheckConfiguration(System.ServiceModel.Configuration.BehaviorsSection)">
            <summary>
            Checks the received configuration section
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Hardening.CheckWcfBehavioursDoNotLeakFaultInformation.DetailPrefixPattern">
            <summary>
            Gets or sets a format string used for the detailed message prefix.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.IgnoredCheckException">
            <summary>
            Exception indicating that a check has been ignored.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.IgnoredCheckException.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of the exception.
            </summary>
            <param name="message">Summary message</param>
            <param name="detailedMessage">Detailed message</param>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.IgnoredCheckException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            For serialisation purposes.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Infrastructure.CheckDiskSpaceMeetsRecommendedSpecification">
            <summary>
            Checks that the disk holding Sitecore meets a certain minimum size.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Infrastructure.CheckDiskSpaceMeetsRecommendedSpecification.#ctor">
            <summary>
            Creates an instance of the check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Infrastructure.CheckDiskSpaceMeetsRecommendedSpecification.PerformCheck">
            <summary>
            Perform a specific check of a deployment.  Any problems should be flagged
            by throwing a <see cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException"/>.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Infrastructure.CheckDiskSpaceMeetsRecommendedSpecification.RequiredSize">
            <summary>
            Gets or sets a string (e.g. 150GB) indicating the required size of the disk drive.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Infrastructure.CheckSitecoreRunsOnDifferentDriveFromOs">
            <summary>
            Check Sitecore runs on a separate drive from the operating system.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Infrastructure.CheckSitecoreRunsOnDifferentDriveFromOs.#ctor">
            <summary>
            Creates an instance of the check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Infrastructure.CheckSitecoreRunsOnDifferentDriveFromOs.PerformCheck">
            <summary>
            Perform a specific check of a deployment.  Any problems should be flagged
            by throwing a <see cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException"/>.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckHtmlCacheClearerSites">
            <summary>
            Check to ensure that HtmlCacheClearer is clearing the HTML caches of the correct sites.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckHtmlCacheClearerSites.#ctor">
            <summary>
            Creates an instance of the check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckHtmlCacheClearerSites.PerformCheck">
            <summary>
            Perform a specific check of a deployment.  Any problems should be flagged
            by throwing a <see cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException"/>.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Some issue was flagged while executing the check</exception>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckHtmlCacheClearerSites.IgnoredSites">
            <summary>
            Gets or sets a list of ignored sites.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckHtmlCacheClearerSites.DetailPrefixPattern">
            <summary>
            Gets or sets a format string used for the detailed message prefix.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckHtmlCacheSizes">
            <summary>
            Check to verify that HTML cache sizes are at least a certain minimum size.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckHtmlCacheSizes.#ctor">
            <summary>
            Creates an instance of the check.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckHtmlCacheSizes.PerformCheck">
            <summary>
            Perform a specific check of a deployment.  Any problems should be flagged
            by throwing a <see cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException"/>.
            </summary>
            <exception cref="T:Codehouse.Common.DeploymentChecker.Checks.CheckException">Indicates the check failed for some reason</exception>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckHtmlCacheSizes.IgnoredSites">
            <summary>
            Gets or sets a list of ignored sites.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckHtmlCacheSizes.DetailPrefixPattern">
            <summary>
            Gets or sets a format string used for the detailed message prefix.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Checks.Tuning.CheckHtmlCacheSizes.MinimumSize">
            <summary>
            Gets or sets a string (e.g. 100MB) indicating the minimum size of the cache.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Configuration.Config">
            <summary>
            Class used to access the configuration of the Deployment Checker module
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Configuration.Config.Current">
            <summary>
            A reference to the current configuration of the module.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Configuration.ConfigurationContainer">
            <summary>
            An implementation of the container for all the configuration
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Configuration.IConfiguration">
            <summary>
            Interface representing the configuration settings available.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Configuration.IConfiguration.GetString(System.String)">
            <summary>
            Gets a string.
            </summary>
            <param name="key">Key of the string to get</param>
            <returns>A string</returns>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Configuration.IConfiguration.Checks">
            <summary>
            Gets a list of registered checks.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Configuration.IConfiguration.Mitigations">
            <summary>
            Gets a list of registered mitigations.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Configuration.IConfiguration.IsContentDelivery">
            <summary>
            Gets a value indicating whether the node is a CD node.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Configuration.IConfiguration.IsContentManagement">
            <summary>
            Gets a value indicating whether the node is a CM node.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Configuration.IConfiguration.RequestUrl">
            <summary>
            Gets the request URL to be used for loopback requests.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Configuration.ConfigurationContainer.AddCheck(Codehouse.Common.DeploymentChecker.IDeploymentCheck)">
            <summary>
            Register a check with the internal list of checks.
            </summary>
            <param name="check">Check to be registered</param>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Configuration.ConfigurationContainer.AddMitigation(System.Xml.XmlNode)">
            <summary>
            Register a mitigation with the internal dictionary of mitigations.
            </summary>
            <param name="node">XML node defining the check.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">If the node is malformed.</exception>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Configuration.ConfigurationContainer.GetString(System.String)">
            <summary>
            Gets a string.
            </summary>
            <param name="key">Key of the string to get</param>
            <returns>A string</returns>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Configuration.ConfigurationContainer.Checks">
            <summary>
            Gets a list of registered checks.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Configuration.ConfigurationContainer.Mitigations">
            <summary>
            Gets a list of registered mitigations.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Configuration.ConfigurationContainer.RequestUrl">
            <summary>
            Gets the request URL to be used for loopback requests.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Configuration.ConfigurationContainer.IsContentDelivery">
            <summary>
            Gets a value indicating whether the node is a CD node.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Configuration.ConfigurationContainer.IsContentManagement">
            <summary>
            Gets a value indicating whether the node is a CM node.
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Execution.Runner">
            <summary>
            Class responsible for executing the registered checks and providing their results to the application.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Execution.Runner.GetResults">
            <summary>
            Get the results for all the registered checks.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Execution.RunnerResult">
            <summary>
            A result entity to represent the outcome of a check.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Execution.RunnerResult.CheckId">
            <summary>
            Gets the ID of the check.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Execution.RunnerResult.CheckName">
            <summary>
            Gets the name of the check.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Execution.RunnerResult.Result">
            <summary>
            Gets the result of the check.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Execution.RunnerResult.Message">
            <summary>
            Gets the message from the check.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Execution.RunnerResult.Mitigation">
            <summary>
            Gets the mitigation (if any) associated with the check.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Execution.RunnerResult.Detail">
            <summary>
            Gets the detailed message from the check.
            </summary>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.Execution.RunnerResult.Category">
            <summary>
            Gets the category of the check
            </summary>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.ExtensionMethods">
            <summary>
            Provides some extension methods
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.ExtensionMethods.AppendLine(System.Text.StringBuilder,System.String,System.Object[])">
            <summary>
            Adds an append line method with formatting capability.
            </summary>
            <param name="builder">A string builder</param>
            <param name="formatString">The format string</param>
            <param name="args">Arguments</param>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.ExtensionMethods.Indent(System.String)">
            <summary>
            Indents all the lines of a string by four spaces.
            </summary>
            <param name="value">String to indent</param>
            <returns>Indented string</returns>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.ExtensionMethods.ToByteSize(System.Int64)">
            <summary>
            Converts a number of bytes to a human-readable size (e.g. 100MB).
            </summary>
            <param name="value">Number of bytes</param>
            <returns>A human readable string</returns>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.ExtensionMethods.GetPassRate(System.Collections.Generic.IEnumerable{Codehouse.Common.DeploymentChecker.Execution.RunnerResult})">
            <summary>
            Gets the pass rate for a particular set of results.
            </summary>
            <param name="resultGroup">Collection of results</param>
            <returns>The pass rate as a percentage.</returns>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.Sitecore.Admin.DeploymentChecker">
            <summary>
            Deployment checker result page
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Sitecore.Admin.DeploymentChecker.Page_Init(System.Object,System.EventArgs)">
            <summary>
            Page init
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.Sitecore.Admin.DeploymentChecker.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Page load
            </summary>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Sitecore.Admin.DeploymentChecker.OverallScore">
            <summary>
            OverallScore control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Codehouse.Common.DeploymentChecker.Sitecore.Admin.DeploymentChecker.Results">
            <summary>
            Results control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:Codehouse.Common.DeploymentChecker.UI.StatusIndicator">
            <summary>
            Provides a graphical representation of a check result.
            </summary>
        </member>
        <member name="M:Codehouse.Common.DeploymentChecker.UI.StatusIndicator.DoRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
            <remarks>
            When developing custom server controls, you can override this method to generate content for an ASP.NET page.
            </remarks>
            <exception cref="T:System.ArgumentException">Thrown when the <see cref="P:Codehouse.Common.DeploymentChecker.UI.StatusIndicator.Result"/> is not recognised</exception>
        </member>
        <member name="P:Codehouse.Common.DeploymentChecker.UI.StatusIndicator.Result">
            <summary>
            Gets or sets the check result
            </summary>
        </member>
    </members>
</doc>
